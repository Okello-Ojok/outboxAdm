{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-reg/admin-reg.component.html","webpack:///./src/app/admin-reg/admin-reg.component.scss","webpack:///./src/app/admin-reg/admin-reg.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/assets/assets/assets.component.html","webpack:///./src/app/assets/assets/assets.component.scss","webpack:///./src/app/assets/assets/assets.component.ts","webpack:///./src/app/assets/branding/branding.component.html","webpack:///./src/app/assets/branding/branding.component.scss","webpack:///./src/app/assets/branding/branding.component.ts","webpack:///./src/app/assets/create-asset/create-asset.component.html","webpack:///./src/app/assets/create-asset/create-asset.component.scss","webpack:///./src/app/assets/create-asset/create-asset.component.ts","webpack:///./src/app/dialogs/submit-attend/submit-attend.component.html","webpack:///./src/app/dialogs/submit-attend/submit-attend.component.scss","webpack:///./src/app/dialogs/submit-attend/submit-attend.component.ts","webpack:///./src/app/dialogs/submit-event/submit-event.component.html","webpack:///./src/app/dialogs/submit-event/submit-event.component.scss","webpack:///./src/app/dialogs/submit-event/submit-event.component.ts","webpack:///./src/app/event-attendee/event-attendee.component.html","webpack:///./src/app/event-attendee/event-attendee.component.scss","webpack:///./src/app/event-attendee/event-attendee.component.ts","webpack:///./src/app/events.service.ts","webpack:///./src/app/events/create-event/create-event.component.html","webpack:///./src/app/events/create-event/create-event.component.scss","webpack:///./src/app/events/create-event/create-event.component.ts","webpack:///./src/app/events/event-register/event-register.component.html","webpack:///./src/app/events/event-register/event-register.component.scss","webpack:///./src/app/events/event-register/event-register.component.ts","webpack:///./src/app/events/events-board/events-board.component.html","webpack:///./src/app/events/events-board/events-board.component.scss","webpack:///./src/app/events/events-board/events-board.component.ts","webpack:///./src/app/events/events/event-detail/event-detail.component.html","webpack:///./src/app/events/events/event-detail/event-detail.component.scss","webpack:///./src/app/events/events/event-detail/event-detail.component.ts","webpack:///./src/app/events/events/events.component.html","webpack:///./src/app/events/events/events.component.scss","webpack:///./src/app/events/events/events.component.ts","webpack:///./src/app/loading.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/our-nav/our-nav.component.html","webpack:///./src/app/our-nav/our-nav.component.scss","webpack:///./src/app/our-nav/our-nav.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/page-under0construction/page-under0construction.component.html","webpack:///./src/app/page-under0construction/page-under0construction.component.scss","webpack:///./src/app/page-under0construction/page-under0construction.component.ts","webpack:///./src/app/payments/payments.component.html","webpack:///./src/app/payments/payments.component.scss","webpack:///./src/app/payments/payments.component.ts","webpack:///./src/app/residents-list/residents-list.component.html","webpack:///./src/app/residents-list/residents-list.component.scss","webpack:///./src/app/residents-list/residents-list.component.ts","webpack:///./src/app/residents.service.ts","webpack:///./src/app/user-reg/user-reg.component.html","webpack:///./src/app/user-reg/user-reg.component.scss","webpack:///./src/app/user-reg/user-reg.component.ts","webpack:///./src/app/utilities/utilities.component.html","webpack:///./src/app/utilities/utilities.component.scss","webpack:///./src/app/utilities/utilities.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Admin Registration</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n        </mat-form-field>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" minlength=\\\"8\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Repeat Password\\\" [(ngModel)]=\\\"repeatpassword\\\" name=\\\"repeatpassword\\\" type=\\\"password\\\"\\n                  minlength=\\\"8\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n        <span>Use 8 or more characters with a mix of letters, numbers & symbols</span>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Telephone\\\" [(ngModel)]=\\\"telephone\\\" name=\\\"telephone\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Alternate Telephone\\\" [(ngModel)]=\\\"alttelephone\\\" name=\\\"alttelephone\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"ID Type\\\" class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <mat-option *ngFor=\\\"let idtype of idType\\\" [value]=\\\"idtype.id\\\">{{idtype.name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                <input matInput placeholder=\\\"ID Number\\\" [(ngModel)]=\\\"idnumber\\\" name=\\\"idnumber\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n      </form>\\n    </mat-card-content>\\n\\n\\n    <div class=\\\"social-login\\\">\\n      <p>Or Sign Up With</p>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          duo\\n        </i>\\n      </mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          speaker_phone\\n        </i></mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          chat\\n        </i>\\n      </mat-icon>\\n\\n\\n    </div>\\n\\n    <mat-card-actions align=\\\"end\\\">\\n\\n      <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n\\n    </mat-card-actions>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \".login-card {\\n  max-width: 600px;\\n  /* height: 400px; */\\n  margin: 3rem auto; }\\n\\n.login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n[hidden] {\\n  display: none !important; }\\n\\n/* .material-icons {\\n    font-size: 40px;\\n    margin-right: 1em;\\n}\\n */\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-reg',\n  templateUrl: './admin-reg.component.html',\n  styleUrls: ['./admin-reg.component.scss']\n})\nexport class AdminRegComponent implements OnInit {\n\n  show = true;\n  hidden = true;\n\n  idType = [\n    {id: 1, name: \"National ID\"},\n    {id: 2, name: \"Passport\"},\n    {id: 3, name: \"Work ID\"}\n  ]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  showForm(){\n    this.show = !this.show;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OurNavComponent } from './our-nav/our-nav.component';\nimport { LoginComponent } from './login/login.component';\nimport { AdminRegComponent } from './admin-reg/admin-reg.component';\nimport { UserRegComponent } from './user-reg/user-reg.component';\n\n\nimport { AssetsComponent } from './assets/assets/assets.component';\nimport { CreateAssetComponent } from './assets/create-asset/create-asset.component';\nimport { BrandingComponent } from './assets/branding/branding.component';\nimport { EventsComponent } from './events/events/events.component';\nimport { UtilitiesComponent } from './utilities/utilities.component';\nimport { ResidentsListComponent } from './residents-list/residents-list.component';\nimport { EventRegisterComponent } from './events/event-register/event-register.component';\nimport { CreateEventComponent } from './events/create-event/create-event.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n//import { EventsListComponent } from './events/events-list/events-list.component';\nimport { EventDetailComponent } from './events/events/event-detail/event-detail.component';\nimport { PageUnder0constructionComponent } from './page-under0construction/page-under0construction.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n\n  },\n  \n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'admin-register',\n    component: AdminRegComponent\n  },\n  {\n    path: 'resident-register',\n    component: UserRegComponent\n  },\n  {\n    path: 'home',\n    component: PageUnder0constructionComponent\n  },\n  {\n    path: 'assets',\n    component: CreateAssetComponent\n  },\n  {\n    path: 'branding',\n    component: BrandingComponent\n  },\n  {\n    path: 'events',\n    component: EventsComponent\n    \n  },\n  {\n    path: 'event-details/:id',\n    component: EventDetailComponent\n  },\n  {\n    path: 'utilities',\n    component: UtilitiesComponent\n  },\n  {\n    path: 'residents',\n    component: ResidentsListComponent\n  },\n  {\n    path: 'attend',\n    component: EventRegisterComponent\n  },\n  {\n    path: 'create-event',\n    component: CreateEventComponent\n  },\n  {\n    path: 'edit-event/:eventID',\n    component: CreateEventComponent\n  },\n  {\n    path: 'page-under-construction',\n    component:   PageUnder0constructionComponent\n\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!-- <app-our-nav></app-our-nav> -->\\n\\n<!-- <app-login></app-login> -->\\n<app-our-nav></app-our-nav>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'outboxFront';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatDialogModule, MatButtonToggleModule, MatBadgeModule, MatFormFieldModule, MatAutocompleteModule, MatButtonModule, MatProgressSpinnerModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatInputModule, MatSelectModule, MatOptionModule, MatRadioModule, MatCheckboxModule, MatDatepickerModule, MatNativeDateModule, MatCardModule, MatMenuModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\n\nimport { OurNavComponent } from './our-nav/our-nav.component';\nimport { AssetsComponent } from './assets/assets/assets.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegComponent } from './user-reg/user-reg.component';\nimport { AdminRegComponent } from './admin-reg/admin-reg.component';\nimport { CreateAssetComponent } from './assets/create-asset/create-asset.component';\nimport { PaymentsComponent } from './payments/payments.component';\nimport { BrandingComponent } from './assets/branding/branding.component';\nimport { EventsComponent } from './events/events/events.component';\nimport { UtilitiesComponent } from './utilities/utilities.component';\nimport { ResidentsService } from './residents.service';\nimport { EventsService } from './events.service';\nimport { ResidentsListComponent } from './residents-list/residents-list.component';\nimport { EventRegisterComponent } from './events/event-register/event-register.component';\nimport { CreateEventComponent } from './events/create-event/create-event.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { EventDetailComponent } from './events/events/event-detail/event-detail.component';\nimport { EventAttendeeComponent } from './event-attendee/event-attendee.component';\nimport { EventsBoardComponent } from './events/events-board/events-board.component';\nimport { LoadingComponent } from './loading.component';\nimport { PageUnder0constructionComponent } from './page-under0construction/page-under0construction.component';\n\nimport { SubmitEventComponent } from './dialogs/submit-event/submit-event.component';\nimport { SubmitAttendComponent } from './dialogs/submit-attend/submit-attend.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OurNavComponent,\n    \n    AssetsComponent,\n    LoginComponent,\n    UserRegComponent,\n    AdminRegComponent,\n    CreateAssetComponent,\n    PaymentsComponent,\n    BrandingComponent,\n    EventsComponent,\n    UtilitiesComponent,\n    ResidentsListComponent,\n    EventRegisterComponent,\n    CreateEventComponent,\n    PageNotFoundComponent,\n    EventDetailComponent,\n    EventAttendeeComponent,\n    EventsBoardComponent,\n    LoadingComponent,\n    PageUnder0constructionComponent,\n    \n    SubmitEventComponent,\n    SubmitAttendComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule, MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatMenuModule, \n    MatTableModule,\n    MatPaginatorModule, MatBadgeModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatDialogModule\n\n  ],\n  entryComponents: [SubmitEventComponent, SubmitAttendComponent],\n  providers: [ResidentsService, EventsService],\n  bootstrap: [AppComponent]\n  \n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \".assets-card {\\n  width: 600px;\\n  height: 400px;\\n  margin: 3rem auto; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assets',\n  templateUrl: './assets.component.html',\n  styleUrls: ['./assets.component.scss']\n})\nexport class AssetsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"assets-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Outbox/UA Branding Materials</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Asset Name\\\" [(ngModel)]=\\\"assetname\\\" name=\\\"assetname\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Condition\\\" name=\\\"conditions\\\" [(ngModel)]=\\\"condition\\\">\\n                  <mat-option *ngFor=\\\"let condition of conditions\\\" [value]=\\\"condition\\\">\\n                    {{condition}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n          </tr>\\n        </table>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"5\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Comments on current condition\\\" [(ngModel)]=\\\"currentcomment\\\" name=\\\"currentcomment\\\"\\n                  required>\\n                  <mat-hint>Enter comments of item condition before taken. You can use a mix of letters and numbers.</mat-hint>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"5\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Number of items taken\\\" [(ngModel)]=\\\"numbertaken\\\" name=\\\"numbertaken\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date taken\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Date returned\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker2></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Comments on return\\\" [(ngModel)]=\\\"returncomment\\\" name=\\\"returncomment\\\"\\n                  required>\\n                  <mat-hint>Enter comments of item condition on return. You can use a mix of letters and numbers.</mat-hint>\\n              </mat-form-field>\\n            </td>\\n\\n\\n\\n\\n\\n\\n          </tr>\\n\\n        </table>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Record Asset</button>\\n\\n      </form>\\n    </mat-card-content>\\n\\n\\n    <!-- <mat-card-actions align=\\\"end\\\">\\n  \\n        <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n  \\n      </mat-card-actions> -->\\n\\n  </mat-card>\\n</div>\"","module.exports = \".assets-card {\\n  width: 600px;\\n  height: 400px;\\n  margin: 3rem auto; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-branding',\n  templateUrl: './branding.component.html',\n  styleUrls: ['./branding.component.scss']\n})\nexport class BrandingComponent implements OnInit {\n  condition = null;\n  conditions = ['Good', 'Very Good', 'Poor', 'Very Poor'];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"card\\\">\\n    <mat-card class=\\\"assets-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"title\\\">\\n          <h1>Assets Recording</h1>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <form>\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Asset Name\\\" [(ngModel)]=\\\"assetname\\\" name=\\\"assetname\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Tag Number\\\" [(ngModel)]=\\\"tagnumber\\\" name=\\\"tagnumber\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Serial Number\\\" [(ngModel)]=\\\"serialnumber\\\" name=\\\"serialnumber\\\" required>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n  \\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Manufacturer/Seller\\\" [(ngModel)]=\\\"seller\\\" name=\\\"seller\\\" required>\\n                </mat-form-field>\\n              </td>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Class\\\" [(ngModel)]=\\\"assetclass\\\" name=\\\"assetclass\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n            </tr>\\n  \\n          </table>\\n  \\n  \\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Color\\\" [(ngModel)]=\\\"color\\\" name=\\\"color\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Owner\\\" [(ngModel)]=\\\"owner\\\" name=\\\"description\\\" required>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <input matInput placeholder=\\\"Category\\\" [(ngModel)]=\\\"category\\\" name=\\\"category\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                \\n                  <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Purchase Date\\\" required>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                  </mat-form-field>\\n                \\n              </td>\\n  \\n              <td>\\n                  <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                    <input matInput placeholder=\\\"Purchase Price\\\" [(ngModel)]=\\\"purchaseprice\\\" name=\\\"purchaseprice\\\" required>\\n                  </mat-form-field>\\n                </td>\\n  \\n  \\n            </tr>\\n  \\n          </table>\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Record Asset</button>\\n  \\n        </form>\\n      </mat-card-content>\\n  \\n  \\n      <!-- <mat-card-actions align=\\\"end\\\">\\n  \\n        <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n  \\n      </mat-card-actions> -->\\n  \\n    </mat-card>\\n  </div>\\n  \"","module.exports = \".assets-card {\\n  width: 600px;\\n  height: 400px;\\n  margin: 3rem auto; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-asset',\n  templateUrl: './create-asset.component.html',\n  styleUrls: ['./create-asset.component.scss']\n})\nexport class CreateAssetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"dialog\\\">\\n    <!-- <h2 mat-dialog-title>OUTBOX HUB</h2> -->\\n    <img mat-dialog-title src=\\\"assets/images/outbox.png\\\">\\n    <hr>\\n    <mat-dialog-content>\\n      \\n      <strong>{{data}}</strong>\\n    </mat-dialog-content>\\n    <hr>\\n    <mat-dialog-actions>\\n      <!-- <button mat-raised-button (click)=\\\"onCloseConfirm()\\\">CONFIRM</button>&nbsp; -->\\n      <button mat-raised-button (click)=\\\"onCloseCancel()\\\">CLOSE</button>\\n    </mat-dialog-actions>\\n  </div>\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-submit-attend',\n  templateUrl: './submit-attend.component.html',\n  styleUrls: ['./submit-attend.component.scss']\n})\nexport class SubmitAttendComponent implements OnInit {\n\n  constructor(public thisDialogRef: MatDialogRef<SubmitAttendComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: string ) { }\n\n\n  ngOnInit() {\n  }\n\n  onCloseCancel(){\n    this.thisDialogRef.close('Cancel');\n  }\n\n\n}\n","module.exports = \"<div class=\\\"dialog\\\">\\n  <!-- <h2 mat-dialog-title>OUTBOX HUB</h2> -->\\n  <img mat-dialog-title src=\\\"assets/images/outbox.png\\\">\\n  <hr>\\n  <mat-dialog-content>\\n    <!-- Thank you for creating an event.\\n    <br>\\n    <br> -->\\n    <strong>{{data}}</strong>\\n  </mat-dialog-content>\\n  <hr>\\n  <mat-dialog-actions>\\n    <!-- <button mat-raised-button (click)=\\\"onCloseConfirm()\\\">CONFIRM</button>&nbsp; -->\\n    <button mat-raised-button (click)=\\\"onCloseCancel()\\\">CLOSE</button>\\n  </mat-dialog-actions>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-submit-event',\n  templateUrl: './submit-event.component.html',\n  styleUrls: ['./submit-event.component.scss']\n})\nexport class SubmitEventComponent implements OnInit {\n\n  constructor(public thisDialogRef: MatDialogRef<SubmitEventComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: string ) { }\n\n  ngOnInit() {\n  }\n\n  // onCloseConfirm(){\n  //   this.thisDialogRef.close('Close');\n  // }\n\n  onCloseCancel(){\n    this.thisDialogRef.close('Cancel');\n  }\n\n}\n","module.exports = \"<p>\\n  event-attendee works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-event-attendee',\n  templateUrl: './event-attendee.component.html',\n  styleUrls: ['./event-attendee.component.scss']\n})\nexport class EventAttendeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpHandler } from '@angular/common/http';\nimport { Observable, of, throwError, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { map, tap } from 'rxjs/operators';\nimport { Router } from \"@angular/router\";\nimport  * as config from './config/server.json';\nimport { isDevMode } from '@angular/core';\nimport { enableProdMode } from '@angular/core';\n\n\n\n\nimport { Event } from './events.model';\nimport { Attendee } from './events.model';\n\n\nenableProdMode();\nlet addr = (<any>config).live_server;\nif (isDevMode()) {\n  \n  addr = (<any>config).local_server;\n  console.log('development');\n } else {\n  \n  addr = (<any>config).live_server;\n  console.log('live');\n }\n\n//import { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n\n\n\n  //events: Events[]\n  private attendees: Attendee[] = [];\n  private events: Event[] = [];\n  private eventsUpdated = new Subject<Event[]>()\n\n\n\n  // private uri = addr+'/eventreg/all/:get';\n\n  private uri = addr + '/eventreg/';\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getAllEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(addr + '/eventreg/')\n  }\n\n\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(addr + '/eventreg/five')\n  }\n\n  getDetails(id: string): Observable<Attendee[]> {\n    return this.http.get<Attendee[]>(addr+'/eventreg/all/:get')\n\n  }\n\n\n  getEvent(id: string) {\n    return this.http.get<{ _id: string; eventname: string; eventDate: Date; eventPaid: string; facilitators: string }>(\n      addr + \"/eventreg/edit-event/\" + id\n    );\n  }\n\n  getEventDates(): Observable<Event[]> {\n    return this.http.get<Event[]>(addr + '/eventreg/dates')\n  }\n\n  countAttendance(): Observable<any>{\n    return this.http.get<any>(addr + '/eventreg/attendance')\n  }\n\n  countEvents(): Observable<any>{\n    return this.http.get<any>(addr + '/eventreg/countevents')\n  }\n\n\n\n  // GET an event by ID\n  getEventById(id: string): Observable<Event> {\n    return this.http\n      .get<Event>(addr + \"/eventreg/event/\" + id)\n      .pipe(catchError((error, caught) => {\n        console.log('Error Occurred');\n        console.log(error);\n        return Observable.throw(error);\n      })) as any;\n  }\n\n  // GET Attendees by event ID\n  getAttendeesByEventId(eventAtt: string): Observable<Attendee[]> {\n    return this.http\n      .get<Attendee[]>(`${addr+'/eventreg/'}/${eventAtt}/attendees`)\n      .pipe(catchError((error, caught) => {\n        console.log('Error Occurred');\n        console.log(error);\n        return Observable.throw(error);\n      })) as any;\n  }\n\n\n  // ADD Event\n  addEvent(eventname: string, eventDate: Date, eventPaid: string, facilitators: string) {\n    const event: Event = {\n      id: null,\n      eventname: eventname,\n      eventDate: eventDate,\n      eventPaid: eventPaid,\n      facilitators: facilitators\n    };\n    this.http\n      .post<{ message: string; eventId: string }>(\n        addr + \"/eventreg/create-event/\", event)\n      .subscribe(responseData => {\n        const id = responseData.eventId;\n        event.id = id;\n        this.events.push(event);\n        // this.eventsUpdated.next([...this.events]);\n        this.router.navigate([\"/events\"]);\n      });\n  }\n\n  // EDIT Event\n  updateEvent(id: string, eventname: string, eventDate: Date, eventPaid: string, facilitators: string) {\n    const event: Event = {\n      id: id,\n      eventname: eventname,\n      eventDate: eventDate,\n      eventPaid: eventPaid,\n      facilitators: facilitators\n    };\n    this.http\n      .put(addr + \"/eventreg/edit-event/\" + id, event)\n      .subscribe(response => {\n        const updatedEvents = [...this.events];\n        const oldEventIndex = updatedEvents.findIndex(e => e.id === event.id);\n        updatedEvents[oldEventIndex] = event;\n        this.events = updatedEvents;\n        // this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n\n  // ADD Attendee\n  addAttendee(firstname: string, lastname: string, email: string, phone: string, gender: string, occupation: string, eventAtt: Event) {\n    const attendee: Attendee = {\n      id: null,\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      phone: phone,\n      gender: gender,\n      occupation: occupation,\n      eventAtt: eventAtt\n    };\n    this.http\n      .post<{ message: string; attendeeId: string }>(\n        addr + \"/eventreg/event-attendee/\", attendee)\n      .subscribe(responseData => {\n        const id = responseData.attendeeId;\n        attendee.id = id;\n        this.attendees.push(attendee);\n        //  alert(responseData.message);\n        // this.eventsUpdated.next([...this.events]);\n        // this.router.navigate([\"/events\"]);\n      });\n  }\n\n\n  // EDIT Attendee\n  updateAttendee(id: string, firstname: string, lastname: string, email: string, phone: string, gender: string, occupation: string, eventAtt: Event) {\n    const attendee: Attendee = {\n      id: id,\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      phone: phone,\n      gender: gender,\n      occupation: occupation,\n      eventAtt: eventAtt\n\n    };\n    this.http\n      .put(addr + \"/eventreg/event-attendee/\" + id, attendee)\n      .subscribe(response => {\n        const updatedAttendees = [...this.attendees];\n        const oldAttendeeIndex = updatedAttendees.findIndex(e => e.id === attendee.id);\n        updatedAttendees[oldAttendeeIndex] = attendee;\n        this.attendees = updatedAttendees;\n        // this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n\n  getAttendee(id: string) {\n    return this.http.get<Attendee>(\n      addr + \"/eventreg/event-attendee/\" + id);\n  }\n\n\n\n\n  // DELETE Event and associated attendees\n  deleteEvent(id: string) {\n    return this.http.delete(addr + \"/eventreg/event/\" + id)\n      // .subscribe(() => {\n      //   const updatedEvents = this.events.filter(event => event.id !== id)\n      //   this.events = updatedEvents\n        // this.getAllEvents()\n        // this.eventsUpdated.next([...this.events]);\n        // const updatedEvents = this.events.filter(event => { \n        //   this.events = updatedEvents\n        //   this.eventsUpdated.next([...this.events]);\n        \n        // })\n      // })\n\n  }\n\n\n\n  // POST new attendee\n  postAttendee(attendee: Attendee): Observable<Attendee> {\n    return this.http\n      .post<Attendee>(\"http://localhost:3000/eventreg/event-attendee/\", attendee)\n      .pipe(catchError((error, caught) => {\n        console.log('Error Occurred');\n        console.log(error);\n        return Observable.throw(error);\n      })) as any;\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n        <mat-card class=\\\"login-card\\\">\\n            <mat-card-header>\\n              <mat-card-title class=\\\"title\\\">\\n                <h1>Create an Event</h1>\\n              </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n              <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n              <form (submit)=\\\"onAddEvent(eventForm)\\\" #eventForm=\\\"ngForm\\\">\\n                <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <tr>\\n                    <td>\\n                      <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput placeholder=\\\"Event Name\\\" [ngModel]=\\\"event?.eventname\\\" name=\\\"eventname\\\" #eventname=\\\"ngModel\\\" required>\\n                        <mat-error *ngIf=\\\"eventname.invalid && (eventname.dirty || eventname.touched)\\\">Enter a valid event name</mat-error>\\n                      </mat-form-field>\\n                    </td>\\n                  </tr>\\n                  <tr>\\n                    <td>\\n                      <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Event Date\\\" [ngModel]=\\\"event?.eventDate\\\" name=\\\"eventDate\\\"\\n                        #eventDate=\\\"ngModel\\\" required>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                        <mat-error *ngIf=\\\"eventDate.invalid && (eventDate.dirty || eventDate.touched)\\\">Choose a date</mat-error>\\n                      </mat-form-field>\\n                    </td>\\n        \\n                  </tr>\\n                </table>\\n                <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <tr>\\n                    <td>\\n                      <mat-form-field class=\\\"full-width\\\">\\n                          <mat-select placeholder=\\\"Paid Event?\\\" name=\\\"payment\\\" [ngModel]=\\\"event?.paid\\\" #paid=\\\"ngModel\\\" required>\\n                              <mat-option *ngFor=\\\"let paid of payment\\\" [value]=\\\"paid\\\">\\n                                {{paid}}\\n                              </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"paid.invalid && (paid.dirty || paid.touched)\\\">Select an option</mat-error>\\n                      </mat-form-field>\\n                      \\n                    </td>\\n                  </tr>\\n        \\n                </table>\\n                <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <tr>\\n                    <td>\\n                      <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput placeholder=\\\"Facilitators\\\" [ngModel]=\\\"event?.facilitators\\\" name=\\\"facilitators\\\" #facilitators=\\\"ngModel\\\" required>\\n                        <mat-error *ngIf=\\\"facilitators.invalid && (facilitators.dirty || facilitators.touched)\\\">Enter facilitator name(s)</mat-error>\\n                      </mat-form-field>\\n                    </td>\\n                  </tr>\\n        \\n                </table>\\n        \\n                <button mat-raised-button [disabled]=\\\"!eventForm.form.valid\\\" type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"openDialog()\\\">Save Event</button>\\n        \\n              </form>\\n            </mat-card-content>\\n        \\n          </mat-card>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <mat-card id=\\\"sociallinks\\\">\\n        <div>\\n          <ul id=\\\"social\\\">\\n              \\n            <li><i class=\\\"fab fa-facebook-f\\\"></i><a href=\\\"https://www.facebook.com/OutboxHub\\\" target=\\\"_blank\\\">@OutboxHub</a></li>\\n\\n            <li><i class=\\\"fab fa-twitter\\\"></i><a href=\\\"https://www.twitter.com/OutboxHub\\\" target=\\\"_blank\\\">@OutboxHub</a></li>\\n\\n            <li><i class=\\\"fab fa-linkedin-in\\\"></i><a href=\\\"https://www.linkedin.com/company/outbox-uganda\\\" target=\\\"_blank\\\">Outbox-Ltd</a></li>\\n\\n            <li><i class=\\\"fab fa-instagram\\\"></i><a href=\\\"#\\\" target=\\\"_blank\\\">On Instagram</a></li>\\n\\n            <li><i class=\\\"fab fa-youtube\\\"></i><a href=\\\"https://www.youtube.com/channel/UCKNuI2jIWJdSB4Rl9iORMVw\\\" target=\\\"_blank\\\">\\n                on YouTube</a></li>\\n\\n            <li><i class=\\\"fab fa-medium\\\"></i><a href=\\\"https://medium.com/outbox-stories\\\" target=\\\"_blank\\\">On Medium</a></li>\\n\\n            <li><i class=\\\"fab fa-google-plus-g\\\"></i><a href=\\\"https://plus.google.com/+OutboxCoUg\\\" target=\\\"_blank\\\">On\\n                Google +</a></li>\\n          </ul>\\n        </div>\\n\\n\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".login-card td {\\n  padding: 5px 0; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n/* [hidden] {\\n    display: none !important;\\n  }\\n   */\\n\\n/* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable, timer } from 'rxjs';\n\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { EventsService } from '../../events.service';\nimport { Event } from '../../events.model';\nimport { SubmitEventComponent } from '../../dialogs/submit-event/submit-event.component';\n\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-event.component.html',\n  styleUrls: ['./create-event.component.scss']\n})\nexport class CreateEventComponent implements OnInit {\n\n  paid = null;\n  payment = [\"Yes\", \"No\"];\n  isLoading = false;\n  event: Event;\n  private mode = \"create\";\n  private eventID: string;\n  eventDate;\n  dates: Event[];\n  data = \"\";\n  \n  \n\n  constructor(public eventsService: EventsService, public route: ActivatedRoute,\n    public dialog: MatDialog) { }\n\n\n  ngOnInit() {\n    this.eventDate = new Date();\n\n    this.eventsService.getEventDates()\n      .subscribe(data => {\n        this.dates = data\n        console.log(data);\n      })\n    \n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('eventID')) {\n        this.mode = 'edit';\n        this.eventID = paramMap.get('eventID');\n        this.isLoading = true;\n        this.eventsService.getEvent(this.eventID).subscribe(eventData => {\n          this.isLoading = false;\n          this.event = { id: eventData._id, eventname: eventData.eventname, eventDate: eventData.eventDate, eventPaid: eventData.eventPaid, facilitators: eventData.facilitators };\n        })\n\n      } else {\n        this.mode = 'create';\n        this.eventID = null;\n      }\n\n    });\n    // setTimeout(() => {\n    //   this.openDialog() \n    //  }, 500);\n    \n  }\n\n\n\n  onAddEvent(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.eventsService.addEvent(form.value.eventname, form.value.eventDate, form.value.payment, form.value.facilitators);\n    }\n    else {\n      this.eventsService.updateEvent(\n        this.eventID,\n        form.value.eventname,\n        form.value.eventDate,\n        form.value.payment,\n        form.value.facilitators\n      );\n    }\n    form.resetForm();\n    // setTimeout(() => {\n    //   this.openDialog() \n    //  }, 3000);\n  }\n\n  // setTimeout(\"this.openDialog()\", 3000);\n  \n openDialog() {\n    const dialogRef = this.dialog.open(SubmitEventComponent,\n      {\n        width: '400px',\n        data: 'Event created. Thank you!!!'\n      })\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      this.data = result;\n    })\n\n    \n  }\n\n  \n  \n\n  \n\n}\n","module.exports = \"<div class=\\\"container attendereg\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n\\n      <mat-card>\\n        <h1>Event Registration</h1>\\n\\n        <form (submit)=\\\"onAddAttendee(attendeeForm)\\\" #attendeeForm=\\\"ngForm\\\">\\n\\n          <div class=\\\"fiveEvents\\\">\\n            <h4>Choose Event to register for.</h4>\\n            \\n            <mat-button-toggle-group name=\\\"ourEvents\\\" [ngModel]=\\\"ourEvents?.upcoming\\\" #upcoming=\\\"ngModel\\\" required>\\n              <mat-button-toggle *ngFor=\\\"let upcoming of events\\\" [value]=\\\"upcoming\\\" class=\\\"eventStyle\\\">\\n                <!-- <div class=\\\"post-submitted-info\\\">\\n                    <div class=\\\"submitted-date\\\">\\n                      <div class=\\\"month\\\">{{upcoming.eventDate | date: 'MMM'}}</div>\\n                      <div class=\\\"day\\\">{{upcoming.eventDate | date: 'dd'}}</div>\\n                      <div class=\\\"year\\\">{{upcoming.eventDate | date: 'yyyy'}}</div>\\n                    </div>\\n                  </div> -->\\n                  \\n                  <div class=\\\"fa-5x\\\">\\n                      <span class=\\\"fa-layers fa-fw\\\">\\n                          <i class=\\\"fas fa-calendar\\\"></i>\\n                          <span class=\\\"fa-layers-text fa-inverse\\\" data-fa-transform=\\\"shrink-7 down-1\\\" style=\\\"font-weight:900;font-size: 60px\\\">\\n                            {{upcoming.eventDate | date: 'dd'}}\\n                          </span>\\n                          <span class=\\\"fa-layers-text fa-inverse month\\\" data-fa-transform=\\\"shrink-13 down-6\\\" style=\\\"font-weight:800;text-transform: uppercase\\\">\\n                            {{upcoming.eventDate | date: 'MMM'}}\\n                          </span>\\n                        </span>\\n                  </div>\\n                  <span class=\\\"name\\\">{{upcoming.eventname}}</span>\\n                  \\n\\n\\n              </mat-button-toggle>\\n\\n            </mat-button-toggle-group>\\n\\n          </div>\\n\\n\\n          <!-- <div class=\\\"post-submitted-info\\\">\\n            <div class=\\\"submitted-date\\\">\\n              <div class=\\\"month\\\">Oct</div>\\n              <div class=\\\"day\\\">30</div>\\n              <div class=\\\"year\\\">2014</div>\\n            </div>\\n          </div> -->\\n\\n\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"First Name\\\" [ngModel]=\\\"attendee?.firstname\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\"\\n                    required>\\n                    <mat-error *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\">Enter your firstname</mat-error>\\n                </mat-form-field>\\n              </td>\\n\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Last Name\\\" [ngModel]=\\\"attendee?.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\"\\n                    required>\\n                    <mat-error *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\">Enter your lastname</mat-error>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Email\\\" [ngModel]=\\\"attendee?.email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\n                    required>\\n                    <mat-error *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">Enter your email</mat-error>\\n                </mat-form-field>\\n              </td>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Telephone\\\" [ngModel]=\\\"attendee?.telephone\\\" name=\\\"telephone\\\" #telephone=\\\"ngModel\\\"\\n                    required>\\n                    <mat-error *ngIf=\\\"telephone.invalid && (telephone.dirty || telephone.touched)\\\">Enter your telephone number</mat-error>\\n                </mat-form-field>\\n              </td>\\n\\n            </tr>\\n          </table>\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Gender\\\" name=\\\"gender\\\" [ngModel]=\\\"attendee?.sex\\\" #sex=\\\"ngModel\\\" required>\\n                    <mat-option *ngFor=\\\"let sex of gender\\\" [value]=\\\"sex\\\">\\n                      {{sex}}\\n                    </mat-option>\\n                  </mat-select>\\n                  <mat-error *ngIf=\\\"sex.invalid && (sex.dirty || sex.touched)\\\">Select your gender</mat-error>\\n                </mat-form-field>\\n              </td>\\n\\n              <td>\\n                <mat-form-field>\\n                  <mat-select placeholder=\\\"Occupation\\\" name=\\\"occupation\\\" [ngModel]=\\\"attendee?.occupation\\\" #occupation=\\\"ngModel\\\"\\n                    required>\\n                    <mat-option *ngFor=\\\"let occupation of occupations\\\" [value]=\\\"occupation\\\">\\n                      {{occupation}}\\n                    </mat-option>\\n                  </mat-select>\\n                  <mat-error *ngIf=\\\"occupation.invalid && (occupation.dirty || occupation.touched)\\\">Select an option</mat-error>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n          <button mat-raised-button [disabled]=\\\"!attendeeForm.form.valid\\\" type=\\\"submit\\\" color=\\\"primary\\\" (click)=\\\"openDialog()\\\">Register</button>\\n        </form>\\n\\n      </mat-card>\\n\\n\\n\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <mat-card id=\\\"sociallinks\\\">\\n        <div>\\n          <ul id=\\\"social\\\">\\n              \\n            <li><i class=\\\"fab fa-facebook-f\\\"></i><a href=\\\"https://www.facebook.com/OutboxHub\\\" target=\\\"_blank\\\">@OutboxHub</a></li>\\n\\n            <li><i class=\\\"fab fa-twitter\\\"></i><a href=\\\"https://www.twitter.com/OutboxHub\\\" target=\\\"_blank\\\">@OutboxHub</a></li>\\n\\n            <li><i class=\\\"fab fa-linkedin-in\\\"></i><a href=\\\"https://www.linkedin.com/company/outbox-uganda\\\" target=\\\"_blank\\\">Outbox-Ltd</a></li>\\n\\n            <li><i class=\\\"fab fa-instagram\\\"></i><a href=\\\"#\\\" target=\\\"_blank\\\">On Instagram</a></li>\\n\\n            <li><i class=\\\"fab fa-youtube\\\"></i><a href=\\\"https://www.youtube.com/channel/UCKNuI2jIWJdSB4Rl9iORMVw\\\" target=\\\"_blank\\\">\\n                on YouTube</a></li>\\n\\n            <li><i class=\\\"fab fa-medium\\\"></i><a href=\\\"https://medium.com/outbox-stories\\\" target=\\\"_blank\\\">On Medium</a></li>\\n\\n            <li><i class=\\\"fab fa-google-plus-g\\\"></i><a href=\\\"https://plus.google.com/+OutboxCoUg\\\" target=\\\"_blank\\\">On\\n                Google +</a></li>\\n          </ul>\\n        </div>\\n\\n\\n      </mat-card>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \".login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 95%; }\\n\\n.fiveEvents {\\n  margin-bottom: 20px; }\\n\\n.mat-button-toggle-group {\\n  width: 100% !important; }\\n\\n.mat-button-toggle {\\n  width: 100%;\\n  margin: 5px;\\n  border: 1px solid white;\\n  color: #299ADF; }\\n\\n.mat-button-toggle-checked {\\n  background-color: white;\\n  color: #299ADF !important;\\n  /* border: 1px solid #0087D9; */ }\\n\\n.mat-button-toggle-checked .post-submitted-info, .mat-button-toggle-checked .fa-5x,\\n.mat-button-toggle-checked .name {\\n  background-color: white;\\n  color: #FD2C65 !important;\\n  /* border: 1px solid #0087D9; */ }\\n\\n.fa-layers-text {\\n  color: white; }\\n\\n.fiveEvents .fa-4x {\\n  color: #299ADF; }\\n\\n/* .mat-button-toggle:hover {\\n  background-color: black;\\n  color: #299ADF;\\n  background-position: 100% 0;\\n    -moz-transition: all .4s ease-in-out;\\n    -o-transition: all .4s ease-in-out;\\n    -webkit-transition: all .4s ease-in-out;\\n    transition: all .4s ease-in-out;\\n}  */\\n\\n.mat-button-toggle:hover .post-submitted-info {\\n  color: #299ADF;\\n  background-position: 100% 0;\\n  transition: all .4s ease-in-out; }\\n\\n.mat-button-toggle:hover .fa-4x {\\n  background-color: white;\\n  color: #299ADF; }\\n\\n/* #social li:hover a, #social li:hover .fa{\\n    color: #0087D9;\\n    background-position: 100% 0;\\n    -moz-transition: all .4s ease-in-out;\\n    -o-transition: all .4s ease-in-out;\\n    -webkit-transition: all .4s ease-in-out;\\n    transition: all .4s ease-in-out;\\n} */\\n\\n.mat-button-toggle-label-content {\\n  line-height: 20px !important; }\\n\\n.eventStyle span {\\n  padding: 0px;\\n  display: block;\\n  padding-top: 5px; }\\n\\n/* .eventStyle .month, .eventStyle .year {\\n    font-size: 14px;\\n    text-transform: uppercase;\\n} */\\n\\n.calendar-text {\\n  margin-top: .3em !important; }\\n\\n.post-submitted-info {\\n  font-weight: 700;\\n  text-align: center;\\n  line-height: 1;\\n  top: 0;\\n  left: 0;\\n  color: #299ADF; }\\n\\n/* .post-submitted-info:hover{\\n    color: #0087D9;\\n} */\\n\\n/* .submitted-date {\\n    margin-top: 12px;\\n} */\\n\\n.submitted-date {\\n  margin: 10px 0 0 0;\\n  /* border-right: 1px solid #c2c2c2; */\\n  padding-bottom: 10px; }\\n\\n.submitted-info {\\n  font-weight: 700;\\n  text-align: center;\\n  line-height: 1;\\n  top: 0;\\n  left: 0; }\\n\\n.post-submitted-info .month, .post-submitted-info .year {\\n  font-size: 14px;\\n  text-transform: uppercase; }\\n\\n.post-submitted-info .month {\\n  margin-top: -1px; }\\n\\n.post-submitted-info .day {\\n  font-size: 25px;\\n  font-weight: 900;\\n  margin-bottom: 2px; }\\n\\n.post-submitted-info .year {\\n  font-size: 14px;\\n  text-transform: uppercase; }\\n\\n/* .fa-layers .month{\\n    font-weight: 700 !important;\\n    text-align: center;\\n    line-height: 1;\\n    \\n    font-size: 14px;\\n    text-transform: uppercase;\\n} */\\n\\n/* .attendereg{\\n    margin-top: 20px;\\n} */\\n\"","import { Component, ChangeDetectorRef, ViewEncapsulation, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Event } from '../../events.model';\nimport { Observable, observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { SubmitAttendComponent } from '../../dialogs/submit-attend/submit-attend.component';\n\n\n\nimport { FormControl } from '@angular/forms';\n\nimport { EventsService } from '../../events.service';\nimport { Attendee } from '../../events.model';\n\n\n@Component({\n  selector: 'app-event-register',\n  templateUrl: './event-register.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./event-register.component.scss']\n})\nexport class EventRegisterComponent implements OnInit {\n \n\n\n  events: Event[]\n  sex = null;\n  gender = [\"Male\", \"Female\"];\n\n  isLoading = false;\n  attendee: Attendee;\n  private mode = \"create\";\n  private attendeeID: string;\n\n  occupation = null;\n  occupations = [\"Student\", \"Proffessional\", \"Other\"];\n  data = \"\";\n\n\n  constructor(private eventsService: EventsService, public route: ActivatedRoute, private changeDetectorRefs: ChangeDetectorRef, public dialog: MatDialog) { }\n\n\n  ngOnInit() {\n    this.eventsService.getEvents()\n      .subscribe(data => {\n        this.events = data\n        this.changeDetectorRefs.detectChanges();\n        console.log(data);\n\n      }, err => {\n        console.log(err);\n\n      });\n    console.log(this.events);\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('attendeeID')) {\n        this.mode = 'edit';\n        this.attendeeID = paramMap.get('attendeeID');\n        this.isLoading = true;\n        this.eventsService.getAttendee(this.attendeeID).subscribe(attendeeData => {\n          this.isLoading = false;\n          this.attendee = {id: attendeeData.id, firstname: attendeeData.firstname, lastname: attendeeData.lastname, email: attendeeData.email, phone: attendeeData.phone, \n            gender: attendeeData.gender, occupation: attendeeData.occupation, eventAtt: attendeeData.eventAtt};\n        })\n\n      } else{\n        this.mode = 'create';\n        this.attendeeID = null;\n      }\n\n    });  \n\n  }\n\n\n  onAddAttendee(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.eventsService.addAttendee(form.value.firstname, form.value.lastname, form.value.email, form.value.phone, form.value.gender, form.value.occupation, form.value.ourEvents);\n    } \n    // else {\n    //   this.eventsService.updateAttendee(\n    //     this.eventID,\n    //     form.value.eventname, \n    //     form.value.eventDate, \n    //     form.value.payment, \n    //     form.value.facilitators\n    //   );\n    // }\n    form.resetForm();\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(SubmitAttendComponent,\n      {\n        width: '400px',\n        data: 'You have successfully registered for an event. Thank you!!!'\n      })\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n      this.data = result;\n    })\n\n    \n  }\n\n\n  \n}\n","module.exports = \"<div class=\\\"card\\\">\\n    <mat-card class=\\\"login-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"title\\\">\\n          <h1>Pick an Event</h1>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n       \\n      </mat-card-content>\\n  \\n    </mat-card>\\n  </div>\\n  \"","module.exports = \".login-card {\\n  max-width: 600px;\\n  /* height: 400px; */\\n  margin: 3rem auto; }\\n\\n.login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-events-board',\n  templateUrl: './events-board.component.html',\n  styleUrls: ['./events-board.component.scss']\n})\nexport class EventsBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"[ '/events' ]\\\">Back to Events</button>\\n    <br>\\n    <br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n      <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n      <img *ngIf=\\\"isLoading\\\" src=\\\"assets/cube.gif\\\"/>\\n    </div>\\n    <table mat-table [dataSource]=\\\"details\\\" class=\\\"mat-elevation-z8\\\">\\n\\n\\n      <ng-container matColumnDef=\\\"firstname\\\">\\n        <th mat-header-cell *matHeaderCellDef>First Name</th>\\n        <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.eventname}} </td> -->\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.firstname\\\">{{element.firstname}}</span> <span\\n            *ngIf=\\\"!element.firstname\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"lastname\\\">\\n        <th mat-header-cell *matHeaderCellDef>Last Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.lastname\\\">{{element.lastname}}</span> <span *ngIf=\\\"!element.lastname\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef>Email</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.email\\\">{{element.email}}</span> <span *ngIf=\\\"!element.email\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"gender\\\">\\n        <th mat-header-cell *matHeaderCellDef>Gender</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.gender\\\">{{element.gender}}</span> <span *ngIf=\\\"!element.gender\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"occupation\\\">\\n        <th mat-header-cell *matHeaderCellDef>Occupation</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.occupation\\\">{{element.occupation}}</span> <span\\n            *ngIf=\\\"!element.occupation\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"phone\\\">\\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.phone\\\">{{element.phone}}</span> <span *ngIf=\\\"!element.phone\\\">N/a</span></td>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item>\\n              <mat-icon>create</mat-icon>\\n              <span>Update</span>\\n            </button>\\n            <button mat-menu-item>\\n              <mat-icon>delete_sweep</mat-icon>\\n              <span>Delete</span>\\n            </button>\\n\\n          </mat-menu>\\n        </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\"","module.exports = \".login-card {\\n  max-width: 600px;\\n  /* height: 400px; */\\n  margin: 3rem auto; }\\n\\n.login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n[hidden] {\\n  display: none !important; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-column-right {\\n  text-align: right; }\\n\\n/* Structure */\\n\\n.example-container {\\n  position: relative; }\\n\\n.example-table-container {\\n  position: relative;\\n  max-height: 400px;\\n  overflow: auto; }\\n\\n.example-loading-shade {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 56px;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n/* Column Widths */\\n\\n.mat-column-number,\\n.mat-column-state {\\n  max-width: 64px; }\\n\\n.mat-column-created {\\n  max-width: 124px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\nimport { Event } from '../../../events.model';\nimport { Attendee } from '../../../events.model';\nimport { EventsService } from '../../../events.service';\n\n\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\nexport class EventDetailComponent implements OnInit {\n \n\n\n  details: Attendee[];\n  isLoading= false;\n\n  displayedColumns = ['firstname', 'lastname', 'email', 'gender', 'occupation', 'phone',];\n\n\n\n  constructor(private router: Router, private route: ActivatedRoute,\n    private eventsService: EventsService) { }\n\n  ngOnInit() {\n    \n    this.getDetails(this.route.snapshot.params['id']);\n\n  }\n\n  getDetails(id) {\n    this.isLoading = true;\n    this.eventsService.getAttendeesByEventId(id)\n      .subscribe(data => {\n        this.isLoading = false;\n        console.log(data);\n        this.details = data;\n      });\n  }\n\n\n}\n","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n\\n\\n\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"[ '/create-event' ]\\\">Create An Event</button>\\n    <mat-form-field class=\\\"right\\\">\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search for keyword...\\\">\\n    </mat-form-field>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n      <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n      <img *ngIf=\\\"isLoading\\\" src=\\\"assets/cube.gif\\\" />\\n    </div>\\n\\n\\n\\n    <table id=\\\"myTable\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n      <ng-container matColumnDef=\\\"eventname\\\" id=\\\"eventName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Event Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"> {{element.eventname}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"eventDate\\\" id=\\\"eventDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Event Date</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"> <span *ngIf=\\\"element.eventDate\\\">\\n            {{element.eventDate | date}} </span>\\n          <span *ngIf=\\\"!element.eventDate\\\"> N/a </span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"eventPaid\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Event Paid</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"><span *ngIf=\\\"element.eventPaid\\\">{{element.eventPaid}}</span>\\n          <span *ngIf=\\\"!element.eventPaid\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"facilitators\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Facilitators</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"> <span *ngIf=\\\"element.facilitators\\\">{{element.facilitators}}</span>\\n          <span *ngIf=\\\"!element.facilitators\\\">N/a</span></td>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item>\\n              <mat-icon>create</mat-icon>\\n              <span>Update</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"onDelete(element._id)\\\">\\n              <mat-icon>delete_sweep</mat-icon>\\n              <span>Delete</span>\\n            </button>\\n\\n          </mat-menu>\\n        </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\n\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/event-details/', row._id]\\\"></tr> -->\\n\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\"></mat-paginator>\\n  </mat-card>\\n</div>\\n\"","module.exports = \".login-card {\\n  max-width: 600px;\\n  /* height: 400px; */\\n  margin: 3rem auto; }\\n\\n.login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n[hidden] {\\n  display: none !important; }\\n\\ntable {\\n  width: 100%; }\\n\\n.mat-column-right {\\n  text-align: right; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  float: right;\\n  width: 40%; }\\n\\n/* .right{\\n  text-align: right;\\n} */\\n\\n/* Structure */\\n\\n.example-container {\\n  position: relative; }\\n\\n.example-table-container {\\n  position: relative;\\n  max-height: 400px;\\n  overflow: auto; }\\n\\n.example-loading-shade {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 56px;\\n  right: 0;\\n  background: #f5f5f5;\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n/* Column Widths */\\n\\n.mat-column-number,\\n.mat-column-state {\\n  max-width: 64px; }\\n\\n.mat-column-created {\\n  max-width: 124px; }\\n\\n.mat-row:hover {\\n  background-color: #f5f5f5; }\\n\\n.mat-spinner {\\n  color: #0087D9 !important; }\\n\\n/* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, OnDestroy } from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\nimport { Event } from '../../events.model';\nimport { Attendee } from '../../events.model';\n\nimport { EventsService } from '../../events.service';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.scss']\n})\nexport class EventsComponent implements OnInit {\n\n  events: Event[];\n  attendees: Attendee[]\n\n  isLoading = false;\n  \n  // displayedColumns = ['eventname', 'eventDate', 'eventPaid', 'firstname', 'lastname', 'email', 'phone', 'actions'];\n\n  displayedColumns = ['eventname', 'eventDate', 'eventPaid', 'facilitators', 'actions'];\n  dataSource: MatTableDataSource<Event>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n\n  constructor(private eventsService: EventsService, private router: Router, private changeDetectorRefs: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    \n    this.isLoading = true;\n    this.eventsService.getAllEvents()\n      .subscribe(data => {\n        this.isLoading = false;\n        // this.attendees = data\n        this.dataSource = new MatTableDataSource(data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log(this.dataSource);\n        \n      }, err => {\n        console.log(err);\n        \n      });\n      console.log(this.dataSource); \n\n      this.refreshTable()\n  }\n\n  // Filter table\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  navigate(id){\n  this.router.navigate(['/event-details/', id]);\n  }\n\n  onDelete(id: string){\n    console.log('deleting');\n    this.eventsService.deleteEvent(id)\n    .subscribe(result => {\n      this.refreshTable();\n    });\n    \n  }\n\n  refreshTable(){\n    this.eventsService.getAllEvents()\n    .subscribe(data => {\n      this.events = data;\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      this.changeDetectorRefs.detectChanges();\n    })\n  }\n  \n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  template: `\n  <img src=\"/assets/images/loading.svg\">\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n    img {\n      display: block;\n      margin: 20px auto;\n      width: 50px;\n    }\n  `\n  ]\n})\nexport class LoadingComponent {\n  \n}","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <h1>Sign In</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form class=\\\"login-form\\\">\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions>\\n\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Sign In</button>\\n\\n    </mat-card-actions>\\n\\n    <a href=\\\"#\\\">\\n      <h5>Reset Password?</h5>\\n    </a>\\n  </mat-card>\\n</div>\\n\\n<div class=\\\"social-login\\\">\\n  <p>Or Login With</p>\\n  <mat-icon>\\n    <i class=\\\"material-icons\\\">\\n      duo\\n    </i>\\n  </mat-icon>\\n<mat-icon>\\n  <i class=\\\"material-icons\\\">\\n    speaker_phone\\n  </i></mat-icon>\\n  <mat-icon>\\n    <i class=\\\"material-icons\\\">\\n      chat\\n    </i>\\n  </mat-icon>\\n  \\n</div>\\n\"","module.exports = \".login-card {\\n  max-width: 400px;\\n  height: 300px;\\n  margin: 5rem auto; }\\n\\n/* table {\\n    width: 100%;\\n  } */\\n\\n.full-width {\\n  width: 100%; }\\n\\n.mat-card-title {\\n  text-align: center; }\\n\\n.social-login {\\n  text-align: center; }\\n\\n.material-icons {\\n  font-size: 40px;\\n  margin-right: 1em; }\\n\"","import { Component, OnInit } from '@angular/core';\n// import { NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\"> <img src=\\\"assets/images/outbox.png\\\"></mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"/home\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            home\\n          </i>\\n        </mat-icon>\\n        Home\\n      </a>\\n      <a mat-list-item routerLink=\\\"/attend\\\" routerLinkActive=\\\"active\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            account_circle\\n          </i>\\n        </mat-icon>\\n        Attend Event\\n      </a>\\n      <a mat-list-item routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            event\\n          </i>\\n        </mat-icon>\\n        Events\\n      </a>\\n      <a mat-list-item routerLink=\\\"/residents\\\" routerLinkActive=\\\"active\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            people\\n          </i>\\n        </mat-icon>\\n        Residents\\n      </a>\\n      <!-- <a mat-list-item href=\\\"/page-under-construction\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            money\\n          </i>\\n        </mat-icon>\\n        Payments\\n      </a>\\n      <a mat-list-item href=\\\"/page-under-construction\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            local_grocery_store\\n          </i>\\n        </mat-icon>\\n        Housekeeping\\n      </a>\\n\\n      <a mat-list-item href=\\\"/assets\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            add_circle_outline\\n          </i>\\n        </mat-icon>\\n        Assets\\n      </a>\\n      <a mat-list-item routerLink=\\\"/page-under-construction\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            account_circle\\n          </i>\\n        </mat-icon>\\n        My Account\\n      </a> -->\\n\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <!-- <span>outboxFront</span> -->\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n\\n    <!-- Using bootstarp grid -->\\n    <div class=\\\"container front\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n\\n            <mat-card class=\\\"card1\\\">\\n              <div class=\\\"content\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-5\\\">\\n                      <mat-icon class=\\\"icon-events\\\">\\n                          <i class=\\\"material-icons\\\">\\n                            event\\n                          </i>\\n                        </mat-icon>\\n                  </div>\\n                  <div class=\\\"col-7\\\">\\n                      <div class=\\\"numbers\\\">\\n                          <p>Events Created</p>\\n                          <div class=\\\"count\\\">\\n                              {{countEvt}}\\n                          </div>\\n                      </div>\\n                  </div>\\n                  \\n                </div> \\n                <div class=\\\"footer\\\">\\n                    <hr />\\n                    <div class=\\\"stats\\\">\\n                        <i class=\\\"fas fa-sync-alt\\\"></i> Events from Nov-2018\\n                    </div>\\n                </div>     \\n              </div> \\n              </mat-card>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-4\\\">\\n            <mat-card class=\\\"card2\\\">\\n                <div class=\\\"content\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-4\\\">\\n                          <mat-icon class=\\\"icon-attend\\\">\\n                              <i class=\\\"material-icons\\\">\\n                                people\\n                              </i>\\n                            </mat-icon>\\n                      </div>\\n                      <div class=\\\"col-8\\\">\\n                          <div class=\\\"numbers\\\">\\n                              <p>Event Attendances</p>\\n                              <div class=\\\"count\\\">\\n                                  {{countAtt}}\\n                              </div>\\n                          </div>\\n                      </div>\\n                      \\n                    </div> \\n                    <div class=\\\"footer\\\">\\n                        <hr />\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"fas fa-sync-alt\\\"></i> Events from Nov-2018\\n                        </div>\\n                    </div>     \\n                  </div>               \\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <mat-card class=\\\"3\\\">\\n                <div class=\\\"content\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-5\\\">\\n                          <mat-icon class=\\\"icon-key\\\">\\n                              <i class=\\\"material-icons\\\">\\n                                mic_none\\n                              </i>\\n                            </mat-icon>\\n                      </div>\\n                      <div class=\\\"col-7\\\">\\n                          <div class=\\\"numbers\\\">\\n                              <p>Keynote speeches</p>\\n                              <div class=\\\"count\\\">\\n                                  {{countEvt}}\\n                              </div>\\n                          </div>\\n                      </div>\\n                      \\n                    </div> \\n                    <div class=\\\"footer\\\">\\n                        <hr />\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"fas fa-sync-alt\\\"></i> Events from Nov-2018\\n                        </div>\\n                    </div>     \\n                  </div> \\n              \\n            </mat-card>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <!-- <div class=\\\"front flex-container\\\">\\n      <mat-card>\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            contact_mail\\n          </i>\\n        </mat-icon>\\n        Residency Inquiries\\n      </mat-card>\\n      <mat-card>\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            event\\n          </i>\\n        </mat-icon>\\n        Events Created\\n      </mat-card>\\n      <mat-card>Event Attendees</mat-card>\\n      <mat-card>New Clients</mat-card>\\n    </div> -->\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.mat-toolbar {\\n  z-index: 9999; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: #FAFAFA !important; }\\n\\n.mat-nav-list .mat-list-item {\\n  color: #66615b; }\\n\\n.mat-nav-list .active {\\n  color: #299ADF !important; }\\n\\n.material-icons {\\n  padding-right: 20px; }\\n\\n.flex-container {\\n  /* Safari */\\n  display: flex;\\n  justify-content: space-around; }\\n\\n.front .mat-card {\\n  /* width: 180px; */\\n  /* height: 100px; */\\n  /* margin-top: 20px; */\\n  margin-bottom: 40px; }\\n\\n.mat-card {\\n  border-radius: 6px;\\n  box-shadow: 0 2px 2px rgba(204, 196, 184, 0.5);\\n  background-color: #fff;\\n  color: #252422;\\n  /* margin-bottom: 20px; */\\n  position: relative;\\n  z-index: 1; }\\n\\n.mat-card .content {\\n  padding: 15px 15px 10px 15px; }\\n\\n.mat-card .material-icons {\\n  font-size: 2em;\\n  min-height: 64px; }\\n\\n.mat-card .numbers {\\n  font-size: 2em;\\n  text-align: right; }\\n\\n.mat-card .numbers p {\\n  margin: 0;\\n  font-size: 16px;\\n  line-height: 1.4em; }\\n\\n.mat-card .footer {\\n  padding: 0;\\n  line-height: 30px; }\\n\\n.footer {\\n  background-attachment: fixed;\\n  position: relative; }\\n\\n.mat-card .footer hr {\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  border-color: #f1eae0; }\\n\\n.mat-card .stats {\\n  color: #a9a9a9;\\n  font-weight: 300; }\\n\\n.mat-card .footer .fa {\\n  color: #a9a9a9; }\\n\\n.icon-events {\\n  color: #FD2C65; }\\n\\n.icon-attend {\\n  color: #67EC08; }\\n\\n.icon-key {\\n  color: #f3bb45; }\\n\\n/* p {\\n  font-size: 16px;\\n  line-height: 1.4em;\\n} */\\n\\n/* .material-icons[_ngcontent-c1] {\\n  padding-right: 10px;\\n} */\\n\\n.card-info {\\n  font-weight: 700;\\n  text-align: center;\\n  line-height: 1;\\n  top: 0;\\n  left: 0;\\n  /* color: white; */ }\\n\\n.submitted {\\n  margin: 10px 0 0 0;\\n  /* border-right: 1px solid #c2c2c2; */\\n  padding-bottom: 10px; }\\n\\n.submitted-info {\\n  font-weight: 700;\\n  text-align: center;\\n  line-height: 1;\\n  top: 0;\\n  left: 0; }\\n\\n.card-info .count {\\n  font-size: 25px;\\n  font-weight: 900;\\n  margin-bottom: 2px; }\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { EventsService } from '../events.service';\nimport { Event } from '../events.model';\n\n\n@Component({\n  selector: 'app-our-nav',\n  templateUrl: './our-nav.component.html',\n  styleUrls: ['./our-nav.component.scss'],\n})\nexport class OurNavComponent implements OnInit{\n\n  countAtt;\n  countEvt;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver, public eventsService: EventsService, private changeDetectorRefs: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    // this.eventsService.countAttendance()\n    // .subscribe(data => {\n    //   this.countAtt = data;\n    //   console.log(data);\n    //   this.changeDetectorRefs.detectChanges();\n      \n    // })\n\n    // this.eventsService.countEvents()\n    // .subscribe(data => {\n    //   this.countEvt = data;\n    //   console.log(data);\n    //   this.changeDetectorRefs.detectChanges();\n      \n    // })\n    this.refreshCards();\n    this.refreshCards1();\n    \n  }\n\n  refreshCards(){\n    this.eventsService.countEvents()\n    .subscribe(data => {\n      this.countEvt = data;\n      console.log(data);\n      this.changeDetectorRefs.detectChanges();\n      \n    })\n  }\n  refreshCards1(){\n    this.eventsService.countAttendance()\n    .subscribe(data => {\n      this.countAtt = data;\n      console.log(data);\n      this.changeDetectorRefs.detectChanges();\n      \n    })\n\n  }\n\n  \n  }\n","module.exports = \"<h2>404 page not found\\n  \\n</h2>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<h1 class=\\\"display-1\\\"> page-under-construction!! </h1>\"","module.exports = \"h1 {\\n  margin: 150px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-under0construction',\n  templateUrl: './page-under0construction.component.html',\n  styleUrls: ['./page-under0construction.component.scss']\n})\nexport class PageUnder0constructionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  payments works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\">Add New Resident</button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n        <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n        <img *ngIf=\\\"isLoading\\\" src=\\\"assets/cube.gif\\\"/>\\n      </div>\\n    <table mat-table [dataSource]=\\\"residents\\\" class=\\\"mat-elevation-z8\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"username\\\">\\n        <th mat-header-cell *matHeaderCellDef>Username</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef>Email</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"phone\\\">\\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"website\\\">\\n        <th mat-header-cell *matHeaderCellDef>Website</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.website}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"company.name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Company</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.company.name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\"> \\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n          <mat-icon>more_vert</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item>\\n            <mat-icon>create</mat-icon>\\n            <span>Update</span>\\n          </button>\\n          <button mat-menu-item>\\n            <mat-icon>delete_sweep</mat-icon>\\n            <span>Delete</span>\\n          </button>\\n          \\n        </mat-menu>\\n      </td> \\n      </ng-container>\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-column-right {\\n  text-align: right; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Resident } from '../residents';\nimport { ResidentsService } from '../residents.service';\n\n\n\n\n@Component({\n  selector: 'app-residents-list',\n  templateUrl: './residents-list.component.html',\n  styleUrls: ['./residents-list.component.scss']\n})\nexport class ResidentsListComponent implements OnInit {\n\n  residents: Resident[];\n\n  displayedColumns = ['name', 'username', 'email', 'phone', 'website', 'company.name', 'actions'];\n\n  constructor(private residentsService: ResidentsService) { }\n\n  ngOnInit() {\n    this.residentsService.getResidents()\n        .subscribe(data => {\n          this.residents = data\n          console.log(data)\n        }, err=>{\n          console.log(err)\n        });\n        console.log(this.residents);\n        \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Resident } from './residents';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResidentsService {\n\n  private uri = 'https://jsonplaceholder.typicode.com/users';\n  constructor(private http: HttpClient) { }\n\n  getResidents(): Observable<Resident[]>{\n    return this.http.get<Resident[]>(this.uri);\n  }\n}\n\n","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>User Registration</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n        </mat-form-field>\\n\\n\\n        <span>Use 8 or more characters with a mix of letters, numbers & symbols</span>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Telephone\\\" [(ngModel)]=\\\"telephone\\\" name=\\\"telephone\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Alternate Telephone\\\" [(ngModel)]=\\\"alttelephone\\\" name=\\\"alttelephone\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"ID Type\\\" class=\\\"full-width\\\" cellspacing=\\\"0\\\" required>\\n                  <mat-option *ngFor=\\\"let idtype of idType\\\" [value]=\\\"idtype.id\\\">{{idtype.name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                <input matInput placeholder=\\\"ID Number\\\" [(ngModel)]=\\\"idnumber\\\" name=\\\"idnumber\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-radio-button value=\\\"male\\\">Male</mat-radio-button>\\n            </td>\\n            <td>\\n              <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\n            </td>\\n          </tr>\\n\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <label *ngFor=\\\"let res of residency\\\">\\n              <input type=\\\"radio\\\" name=\\\"residency\\\" [(ngModel)]=\\\"residency\\\" \\n              [value]=\\\"res\\\">{{res.type}}</label>\\n\\n            <!-- <td>\\n              <mat-radio-button value=\\\"individual\\\">Individual</mat-radio-button>\\n            </td>\\n            <td>\\n              <mat-radio-button *ngIf=\\\"residency\\\" value=\\\"company\\\">Company</mat-radio-button>\\n            </td> -->\\n\\n          </tr>\\n        </table>\\n        <div>\\n            <label>If company, enter company name.</label>\\n            <mat-form-field class=\\\"full-width\\\">\\n                \\n                <input matInput placeholder=\\\"Company name\\\" [(ngModel)]=\\\"company\\\" name=\\\"number\\\" required>\\n\\n              </mat-form-field>\\n\\n        </div>\\n\\n      </form>\\n    </mat-card-content>\\n\\n\\n    <div class=\\\"social-login\\\">\\n      <p>Or Sign Up With</p>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          duo\\n        </i>\\n      </mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          speaker_phone\\n        </i></mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          chat\\n        </i>\\n      </mat-icon>\\n\\n\\n    </div>\\n\\n    <mat-card-actions align=\\\"end\\\">\\n\\n      <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n\\n    </mat-card-actions>\\n\\n  </mat-card>\\n</div>\\n\"","module.exports = \".login-card {\\n  max-width: 600px;\\n  /* height: 400px; */\\n  margin: 3rem auto; }\\n\\n.login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n[hidden] {\\n  display: none !important; }\\n\\n/* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ResidentsService } from '../residents.service';\nimport { Resident } from '../residents';\n\n@Component({\n  selector: 'app-user-reg',\n  templateUrl: './user-reg.component.html',\n  styleUrls: ['./user-reg.component.scss']\n})\nexport class UserRegComponent implements OnInit {\n\n  idType = [\n    {id: 1, name: \"National ID\"},\n    {id: 2, name: \"Passport\"},\n    {id: 3, name: \"Work ID\"}\n  ];\n\n  residency = [\n    {id: 1, type: \"Individual\"},\n    {id: 2, type: \"Company\"}\n  ];\n\n  // public residents = [];\n  residents: Resident[];\n\n  constructor(private residentsService: ResidentsService) { }\n\n  ngOnInit() {\n    this.residentsService.getResidents()\n        .subscribe(data => {\n          this.residents = data\n          console.log(data)\n        }, err=>{\n          console.log(err)\n        });\n        console.log(this.residents);\n        \n  }\n\n  \n}\n","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Utilities Records</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Item Name\\\" [(ngModel)]=\\\"itemname\\\" name=\\\"itemname\\\" required>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Unit Price\\\" [(ngModel)]=\\\"unitprice\\\" name=\\\"unitprice\\\" required>\\n              </mat-form-field>\\n            </td>\\n           \\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n              <td>\\n                  <mat-form-field class=\\\"full-width\\\">\\n                    <input matInput placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"quantity\\\" name=\\\"quantity\\\" required>\\n                  </mat-form-field>\\n                </td>\\n            <td>\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date of Purchase\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n\\n\\n          </tr>\\n        </table>\\n\\n\\n\\n\\n\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Record</button>\\n\\n      </form>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\"","module.exports = \".login-card {\\n  max-width: 500px;\\n  /* height: 400px; */\\n  margin: 3rem auto; }\\n\\n.login-card td {\\n  padding: 0 10px; }\\n\\n.mat-card-header {\\n  text-align: center; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n[hidden] {\\n  display: none !important; }\\n\\n/* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-utilities',\n  templateUrl: './utilities.component.html',\n  styleUrls: ['./utilities.component.scss']\n})\nexport class UtilitiesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}