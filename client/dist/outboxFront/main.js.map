{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-reg/admin-reg.component.css","webpack:///./src/app/admin-reg/admin-reg.component.html","webpack:///./src/app/admin-reg/admin-reg.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/assets/assets/assets.component.css","webpack:///./src/app/assets/assets/assets.component.html","webpack:///./src/app/assets/assets/assets.component.ts","webpack:///./src/app/assets/branding/branding.component.css","webpack:///./src/app/assets/branding/branding.component.html","webpack:///./src/app/assets/branding/branding.component.ts","webpack:///./src/app/assets/create-asset/create-asset.component.css","webpack:///./src/app/assets/create-asset/create-asset.component.html","webpack:///./src/app/assets/create-asset/create-asset.component.ts","webpack:///./src/app/charts/charts.component.css","webpack:///./src/app/charts/charts.component.html","webpack:///./src/app/charts/charts.component.ts","webpack:///./src/app/event-attendee/event-attendee.component.css","webpack:///./src/app/event-attendee/event-attendee.component.html","webpack:///./src/app/event-attendee/event-attendee.component.ts","webpack:///./src/app/events.service.ts","webpack:///./src/app/events/create-event/create-event.component.css","webpack:///./src/app/events/create-event/create-event.component.html","webpack:///./src/app/events/create-event/create-event.component.ts","webpack:///./src/app/events/event-register/event-register.component.css","webpack:///./src/app/events/event-register/event-register.component.html","webpack:///./src/app/events/event-register/event-register.component.ts","webpack:///./src/app/events/events-board/events-board.component.css","webpack:///./src/app/events/events-board/events-board.component.html","webpack:///./src/app/events/events-board/events-board.component.ts","webpack:///./src/app/events/events/event-detail/event-detail.component.css","webpack:///./src/app/events/events/event-detail/event-detail.component.html","webpack:///./src/app/events/events/event-detail/event-detail.component.ts","webpack:///./src/app/events/events/events.component.css","webpack:///./src/app/events/events/events.component.html","webpack:///./src/app/events/events/events.component.ts","webpack:///./src/app/loading.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/my-dash/my-dash.component.css","webpack:///./src/app/my-dash/my-dash.component.html","webpack:///./src/app/my-dash/my-dash.component.ts","webpack:///./src/app/my-table/my-table-datasource.ts","webpack:///./src/app/my-table/my-table.component.css","webpack:///./src/app/my-table/my-table.component.html","webpack:///./src/app/my-table/my-table.component.ts","webpack:///./src/app/our-nav/our-nav.component.css","webpack:///./src/app/our-nav/our-nav.component.html","webpack:///./src/app/our-nav/our-nav.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/page-under0construction/page-under0construction.component.css","webpack:///./src/app/page-under0construction/page-under0construction.component.html","webpack:///./src/app/page-under0construction/page-under0construction.component.ts","webpack:///./src/app/payments/payments.component.css","webpack:///./src/app/payments/payments.component.html","webpack:///./src/app/payments/payments.component.ts","webpack:///./src/app/residents-list/residents-list.component.css","webpack:///./src/app/residents-list/residents-list.component.html","webpack:///./src/app/residents-list/residents-list.component.ts","webpack:///./src/app/residents.service.ts","webpack:///./src/app/user-reg/user-reg.component.css","webpack:///./src/app/user-reg/user-reg.component.html","webpack:///./src/app/user-reg/user-reg.component.ts","webpack:///./src/app/utilities/utilities.component.css","webpack:///./src/app/utilities/utilities.component.html","webpack:///./src/app/utilities/utilities.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".login-card {\\n  max-width: 600px;\\n  /* height: 400px; */\\n  margin: 3rem auto;\\n}\\n.login-card td{\\n    padding: 0 10px;\\n}\\n.mat-card-header{\\n    text-align: center;\\n}\\n.full-width {\\n  width: 100%;\\n}\\n[hidden] {\\n  display: none !important;\\n}\\n/* .material-icons {\\n    font-size: 40px;\\n    margin-right: 1em;\\n}\\n */\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Admin Registration</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n        </mat-form-field>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" minlength=\\\"8\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Repeat Password\\\" [(ngModel)]=\\\"repeatpassword\\\" name=\\\"repeatpassword\\\" type=\\\"password\\\"\\n                  minlength=\\\"8\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n        <span>Use 8 or more characters with a mix of letters, numbers & symbols</span>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Telephone\\\" [(ngModel)]=\\\"telephone\\\" name=\\\"telephone\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Alternate Telephone\\\" [(ngModel)]=\\\"alttelephone\\\" name=\\\"alttelephone\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"ID Type\\\" class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <mat-option *ngFor=\\\"let idtype of idType\\\" [value]=\\\"idtype.id\\\">{{idtype.name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                <input matInput placeholder=\\\"ID Number\\\" [(ngModel)]=\\\"idnumber\\\" name=\\\"idnumber\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n      </form>\\n    </mat-card-content>\\n\\n\\n    <div class=\\\"social-login\\\">\\n      <p>Or Sign Up With</p>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          duo\\n        </i>\\n      </mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          speaker_phone\\n        </i></mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          chat\\n        </i>\\n      </mat-icon>\\n\\n\\n    </div>\\n\\n    <mat-card-actions align=\\\"end\\\">\\n\\n      <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n\\n    </mat-card-actions>\\n\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-reg',\n  templateUrl: './admin-reg.component.html',\n  styleUrls: ['./admin-reg.component.css']\n})\nexport class AdminRegComponent implements OnInit {\n\n  show = true;\n  hidden = true;\n\n  idType = [\n    {id: 1, name: \"National ID\"},\n    {id: 2, name: \"Passport\"},\n    {id: 3, name: \"Work ID\"}\n  ]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  showForm(){\n    this.show = !this.show;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OurNavComponent } from './our-nav/our-nav.component';\nimport { LoginComponent } from './login/login.component';\nimport { AdminRegComponent } from './admin-reg/admin-reg.component';\nimport { UserRegComponent } from './user-reg/user-reg.component';\n\n\nimport { AssetsComponent } from './assets/assets/assets.component';\nimport { CreateAssetComponent } from './assets/create-asset/create-asset.component';\nimport { BrandingComponent } from './assets/branding/branding.component';\nimport { EventsComponent } from './events/events/events.component';\nimport { UtilitiesComponent } from './utilities/utilities.component';\nimport { ResidentsListComponent } from './residents-list/residents-list.component';\nimport { EventRegisterComponent } from './events/event-register/event-register.component';\nimport { CreateEventComponent } from './events/create-event/create-event.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n//import { EventsListComponent } from './events/events-list/events-list.component';\nimport { EventDetailComponent } from './events/events/event-detail/event-detail.component';\nimport { PageUnder0constructionComponent } from './page-under0construction/page-under0construction.component';\nimport { ChartsComponent } from './charts/charts.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n\n  },\n  {\n    path: 'home',\n    component: ChartsComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'admin-register',\n    component: AdminRegComponent\n  },\n  {\n    path: 'resident-register',\n    component: UserRegComponent\n  },\n  {\n    path: 'home',\n    component: PageUnder0constructionComponent\n  },\n  {\n    path: 'assets',\n    component: CreateAssetComponent\n  },\n  {\n    path: 'branding',\n    component: BrandingComponent\n  },\n  {\n    path: 'events',\n    component: EventsComponent\n    \n  },\n  {\n    path: 'event-details/:id',\n    component: EventDetailComponent\n  },\n  {\n    path: 'utilities',\n    component: UtilitiesComponent\n  },\n  {\n    path: 'residents',\n    component: ResidentsListComponent\n  },\n  {\n    path: 'attend',\n    component: EventRegisterComponent\n  },\n  {\n    path: 'create-event',\n    component: CreateEventComponent\n  },\n  {\n    path: 'edit-event/:eventID',\n    component: CreateEventComponent\n  },\n  {\n    path: 'page-under-construction',\n    component:   PageUnder0constructionComponent\n\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- <app-our-nav></app-our-nav> -->\\n\\n<!-- <app-login></app-login> -->\\n<app-our-nav></app-our-nav>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'outboxFront';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonToggleModule, MatBadgeModule, MatFormFieldModule, MatAutocompleteModule, MatButtonModule, MatProgressSpinnerModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatInputModule, MatSelectModule, MatOptionModule, MatRadioModule, MatCheckboxModule, MatDatepickerModule, MatNativeDateModule, MatCardModule, MatMenuModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\n\nimport { OurNavComponent } from './our-nav/our-nav.component';\nimport { MyDashComponent } from './my-dash/my-dash.component';\nimport { MyTableComponent } from './my-table/my-table.component';\nimport { AssetsComponent } from './assets/assets/assets.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegComponent } from './user-reg/user-reg.component';\nimport { AdminRegComponent } from './admin-reg/admin-reg.component';\nimport { CreateAssetComponent } from './assets/create-asset/create-asset.component';\nimport { PaymentsComponent } from './payments/payments.component';\nimport { BrandingComponent } from './assets/branding/branding.component';\nimport { EventsComponent } from './events/events/events.component';\nimport { UtilitiesComponent } from './utilities/utilities.component';\nimport { ResidentsService } from './residents.service';\nimport { EventsService } from './events.service';\nimport { ResidentsListComponent } from './residents-list/residents-list.component';\nimport { EventRegisterComponent } from './events/event-register/event-register.component';\nimport { CreateEventComponent } from './events/create-event/create-event.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { EventDetailComponent } from './events/events/event-detail/event-detail.component';\nimport { EventAttendeeComponent } from './event-attendee/event-attendee.component';\nimport { EventsBoardComponent } from './events/events-board/events-board.component';\nimport { LoadingComponent } from './loading.component';\nimport { PageUnder0constructionComponent } from './page-under0construction/page-under0construction.component';\nimport { ChartsComponent } from './charts/charts.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OurNavComponent,\n    MyDashComponent,\n    MyTableComponent,\n    AssetsComponent,\n    LoginComponent,\n    UserRegComponent,\n    AdminRegComponent,\n    CreateAssetComponent,\n    PaymentsComponent,\n    BrandingComponent,\n    EventsComponent,\n    UtilitiesComponent,\n    ResidentsListComponent,\n    EventRegisterComponent,\n    CreateEventComponent,\n    PageNotFoundComponent,\n    EventDetailComponent,\n    EventAttendeeComponent,\n    EventsBoardComponent,\n    LoadingComponent,\n    PageUnder0constructionComponent,\n    ChartsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule, MatButtonToggleModule,\n    MatInputModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatMenuModule, \n    MatTableModule,\n    MatPaginatorModule, MatBadgeModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatFormFieldModule\n\n  ],\n  providers: [ResidentsService, EventsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".assets-card {\\n    width: 600px;\\n    height: 400px;\\n    margin: 3rem auto;\\n  }\\n  \\n.full-width {\\n    width: 100%;\\n}\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assets',\n  templateUrl: './assets.component.html',\n  styleUrls: ['./assets.component.css']\n})\nexport class AssetsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".assets-card {\\n    width: 600px;\\n    height: 400px;\\n    margin: 3rem auto;\\n  }\\n  \\n.full-width {\\n    width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"assets-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Outbox/UA Branding Materials</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Asset Name\\\" [(ngModel)]=\\\"assetname\\\" name=\\\"assetname\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Condition\\\" name=\\\"conditions\\\" [(ngModel)]=\\\"condition\\\">\\n                  <mat-option *ngFor=\\\"let condition of conditions\\\" [value]=\\\"condition\\\">\\n                    {{condition}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n          </tr>\\n        </table>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"5\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Comments on current condition\\\" [(ngModel)]=\\\"currentcomment\\\" name=\\\"currentcomment\\\"\\n                  required>\\n                  <mat-hint>Enter comments of item condition before taken. You can use a mix of letters and numbers.</mat-hint>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"5\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Number of items taken\\\" [(ngModel)]=\\\"numbertaken\\\" name=\\\"numbertaken\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date taken\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Date returned\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker2></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Comments on return\\\" [(ngModel)]=\\\"returncomment\\\" name=\\\"returncomment\\\"\\n                  required>\\n                  <mat-hint>Enter comments of item condition on return. You can use a mix of letters and numbers.</mat-hint>\\n              </mat-form-field>\\n            </td>\\n\\n\\n\\n\\n\\n\\n          </tr>\\n\\n        </table>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Record Asset</button>\\n\\n      </form>\\n    </mat-card-content>\\n\\n\\n    <!-- <mat-card-actions align=\\\"end\\\">\\n  \\n        <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n  \\n      </mat-card-actions> -->\\n\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-branding',\n  templateUrl: './branding.component.html',\n  styleUrls: ['./branding.component.css']\n})\nexport class BrandingComponent implements OnInit {\n  condition = null;\n  conditions = ['Good', 'Very Good', 'Poor', 'Very Poor'];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".assets-card {\\n    width: 600px;\\n    height: 400px;\\n    margin: 3rem auto;\\n  }\\n  \\n.full-width {\\n    width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"card\\\">\\n    <mat-card class=\\\"assets-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"title\\\">\\n          <h1>Assets Recording</h1>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <form>\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Asset Name\\\" [(ngModel)]=\\\"assetname\\\" name=\\\"assetname\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Tag Number\\\" [(ngModel)]=\\\"tagnumber\\\" name=\\\"tagnumber\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Serial Number\\\" [(ngModel)]=\\\"serialnumber\\\" name=\\\"serialnumber\\\" required>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n  \\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Manufacturer/Seller\\\" [(ngModel)]=\\\"seller\\\" name=\\\"seller\\\" required>\\n                </mat-form-field>\\n              </td>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Class\\\" [(ngModel)]=\\\"assetclass\\\" name=\\\"assetclass\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n            </tr>\\n  \\n          </table>\\n  \\n  \\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Color\\\" [(ngModel)]=\\\"color\\\" name=\\\"color\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                <mat-form-field class=\\\"full-width\\\">\\n                  <input matInput placeholder=\\\"Owner\\\" [(ngModel)]=\\\"owner\\\" name=\\\"description\\\" required>\\n                </mat-form-field>\\n              </td>\\n            </tr>\\n          </table>\\n          <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                  <input matInput placeholder=\\\"Category\\\" [(ngModel)]=\\\"category\\\" name=\\\"category\\\" required>\\n                </mat-form-field>\\n              </td>\\n  \\n              <td>\\n                \\n                  <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Purchase Date\\\" required>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                  </mat-form-field>\\n                \\n              </td>\\n  \\n              <td>\\n                  <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                    <input matInput placeholder=\\\"Purchase Price\\\" [(ngModel)]=\\\"purchaseprice\\\" name=\\\"purchaseprice\\\" required>\\n                  </mat-form-field>\\n                </td>\\n  \\n  \\n            </tr>\\n  \\n          </table>\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Record Asset</button>\\n  \\n        </form>\\n      </mat-card-content>\\n  \\n  \\n      <!-- <mat-card-actions align=\\\"end\\\">\\n  \\n        <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n  \\n      </mat-card-actions> -->\\n  \\n    </mat-card>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-asset',\n  templateUrl: './create-asset.component.html',\n  styleUrls: ['./create-asset.component.css']\n})\nexport class CreateAssetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.css']\n})\nexport class ChartsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n   \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  event-attendee works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-event-attendee',\n  templateUrl: './event-attendee.component.html',\n  styleUrls: ['./event-attendee.component.css']\n})\nexport class EventAttendeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpHandler } from '@angular/common/http';\nimport { Observable, of, throwError, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { map, tap } from 'rxjs/operators';\nimport { Router } from \"@angular/router\";\nimport  * as config from './config/server.json';\nimport { isDevMode } from '@angular/core';\n\n\nimport { Event } from './events.model';\nimport { Attendee } from './events.model';\n\nlet addr = (<any>config).live_server;\nif (isDevMode()) {\n  // dev code\n  addr = (<any>config).local_server;\n  console.log('development');\n } else {\n  // production code\n  addr = (<any>config).live_server;\n  console.log('live');\n }\n\n//import { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n\n\n\n  //events: Events[]\n  private attendees: Attendee[] = [];\n  private events: Event[] = [];\n  private eventsUpdated = new Subject<Event[]>()\n\n\n\n  // private uri = addr+'/eventreg/all/:get';\n\n  private uri = addr + '/eventreg/';\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getAllEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(addr + '/eventreg/')\n  }\n\n\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(addr + '/eventreg/five')\n  }\n\n  getDetails(id: string): Observable<Attendee[]> {\n    return this.http.get<Attendee[]>(addr+'/eventreg/all/:get')\n\n  }\n\n\n  getEvent(id: string) {\n    return this.http.get<{ _id: string; eventname: string; eventDate: Date; eventPaid: string; facilitators: string }>(\n      \"http://localhost:3000/eventreg/edit-event/\" + id\n    );\n  }\n\n\n\n  // GET an event by ID\n  getEventById(id: string): Observable<Event> {\n    return this.http\n      .get<Event>(\"http://localhost:3000/eventreg/event/\" + id)\n      .pipe(catchError((error, caught) => {\n        console.log('Error Occurred');\n        console.log(error);\n        return Observable.throw(error);\n      })) as any;\n  }\n\n  // GET Attendees by event ID\n  getAttendeesByEventId(eventAtt: string): Observable<Attendee[]> {\n    return this.http\n      .get<Attendee[]>(`${addr+'/eventreg/'}/${eventAtt}/attendees`)\n      .pipe(catchError((error, caught) => {\n        console.log('Error Occurred');\n        console.log(error);\n        return Observable.throw(error);\n      })) as any;\n  }\n\n\n  // ADD Event\n  addEvent(eventname: string, eventDate: Date, eventPaid: string, facilitators: string) {\n    const event: Event = {\n      id: null,\n      eventname: eventname,\n      eventDate: eventDate,\n      eventPaid: eventPaid,\n      facilitators: facilitators\n    };\n    this.http\n      .post<{ message: string; eventId: string }>(\n        \"http://localhost:3000/eventreg/create-event/\", event)\n      .subscribe(responseData => {\n        const id = responseData.eventId;\n        event.id = id;\n        this.events.push(event);\n        // this.eventsUpdated.next([...this.events]);\n        this.router.navigate([\"/events\"]);\n      });\n  }\n\n  // EDIT Event\n  updateEvent(id: string, eventname: string, eventDate: Date, eventPaid: string, facilitators: string) {\n    const event: Event = {\n      id: id,\n      eventname: eventname,\n      eventDate: eventDate,\n      eventPaid: eventPaid,\n      facilitators: facilitators\n    };\n    this.http\n      .put(\"http://localhost:3000/eventreg/edit-event/\" + id, event)\n      .subscribe(response => {\n        const updatedEvents = [...this.events];\n        const oldEventIndex = updatedEvents.findIndex(e => e.id === event.id);\n        updatedEvents[oldEventIndex] = event;\n        this.events = updatedEvents;\n        // this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n\n  // ADD Attendee\n  addAttendee(firstname: string, lastname: string, email: string, phone: string, gender: string, occupation: string, eventAtt: Event) {\n    const attendee: Attendee = {\n      id: null,\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      phone: phone,\n      gender: gender,\n      occupation: occupation,\n      eventAtt: eventAtt\n    };\n    this.http\n      .post<{ message: string; attendeeId: string }>(\n        \"http://localhost:3000/eventreg/event-attendee/\", attendee)\n      .subscribe(responseData => {\n        const id = responseData.attendeeId;\n        attendee.id = id;\n        this.attendees.push(attendee);\n        //  alert(responseData.message);\n        // this.eventsUpdated.next([...this.events]);\n        // this.router.navigate([\"/events\"]);\n      });\n  }\n\n\n  // EDIT Attendee\n  updateAttendee(id: string, firstname: string, lastname: string, email: string, phone: string, gender: string, occupation: string, eventAtt: Event) {\n    const attendee: Attendee = {\n      id: id,\n      firstname: firstname,\n      lastname: lastname,\n      email: email,\n      phone: phone,\n      gender: gender,\n      occupation: occupation,\n      eventAtt: eventAtt\n\n    };\n    this.http\n      .put(\"http://localhost:3000/eventreg/event-attendee/\" + id, attendee)\n      .subscribe(response => {\n        const updatedAttendees = [...this.attendees];\n        const oldAttendeeIndex = updatedAttendees.findIndex(e => e.id === attendee.id);\n        updatedAttendees[oldAttendeeIndex] = attendee;\n        this.attendees = updatedAttendees;\n        // this.postsUpdated.next([...this.posts]);\n        this.router.navigate([\"/\"]);\n      });\n  }\n\n\n  getAttendee(id: string) {\n    return this.http.get<Attendee>(\n      \"http://localhost:3000/eventreg/event-attendee/\" + id);\n  }\n\n\n\n\n  // DELETE Event and associated attendees\n  deleteEvent(id: string) {\n    return this.http.delete(\"http://localhost:3000/eventreg/\" + id)\n      // .subscribe(() => {\n      //   const updatedEvents = this.events.filter(event => event.id !== id)\n      //   this.events = updatedEvents\n        // this.getAllEvents()\n        // this.eventsUpdated.next([...this.events]);\n        // const updatedEvents = this.events.filter(event => { \n        //   this.events = updatedEvents\n        //   this.eventsUpdated.next([...this.events]);\n        \n        // })\n      // })\n\n  }\n\n\n\n  // POST new attendee\n  postAttendee(attendee: Attendee): Observable<Attendee> {\n    return this.http\n      .post<Attendee>(\"http://localhost:3000/eventreg/event-attendee/\", attendee)\n      .pipe(catchError((error, caught) => {\n        console.log('Error Occurred');\n        console.log(error);\n        return Observable.throw(error);\n      })) as any;\n  }\n\n}\n","module.exports = \".login-card {\\n    max-width: 600px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 5px 0;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  /* [hidden] {\\n    display: none !important;\\n  }\\n   */\\n  /* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n  \"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Create an Event</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n      <form (submit)=\\\"onAddEvent(eventForm)\\\" #eventForm=\\\"ngForm\\\">\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Event Name\\\" [ngModel]=\\\"event?.eventname\\\" name=\\\"eventname\\\" #eventname=\\\"ngModel\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Event Date\\\" [ngModel]=\\\"event?.eventDate\\\" name=\\\"eventDate\\\"\\n                #eventDate=\\\"ngModel\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-select placeholder=\\\"Paid Event?\\\" name=\\\"payment\\\" [ngModel]=\\\"event?.paid\\\" #paid=\\\"ngModel\\\">\\n                <mat-option *ngFor=\\\"let paid of payment\\\" [value]=\\\"paid\\\">\\n                  {{paid}}\\n                </mat-option>\\n              </mat-select>\\n            </td>\\n          </tr>\\n\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Facilitators\\\" [ngModel]=\\\"event?.facilitators\\\" name=\\\"facilitators\\\" #facilitators=\\\"ngModel\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Save Event</button>\\n\\n      </form>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { EventsService } from '../../events.service';\nimport { Event } from '../../events.model';\n\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-event.component.html',\n  styleUrls: ['./create-event.component.css']\n})\nexport class CreateEventComponent implements OnInit {\n\n  paid = null;\n  payment = [\"Yes\", \"No\"];\n  isLoading = false;\n  event: Event;\n  private mode = \"create\";\n  private eventID: string;\n  eventDate;\n  \n\n  constructor(public eventsService: EventsService, public route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.eventDate = new Date();\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('eventID')) {\n        this.mode = 'edit';\n        this.eventID = paramMap.get('eventID');\n        this.isLoading = true;\n        this.eventsService.getEvent(this.eventID).subscribe(eventData => {\n          this.isLoading = false;\n          this.event = {id: eventData._id, eventname: eventData.eventname, eventDate: eventData.eventDate, eventPaid: eventData.eventPaid, facilitators: eventData.facilitators};\n        })\n\n      } else{\n        this.mode = 'create';\n        this.eventID = null;\n      }\n\n    });\n  }\n\n  onAddEvent(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.eventsService.addEvent(form.value.eventname, form.value.eventDate, form.value.payment, form.value.facilitators);\n    } \n    else {\n      this.eventsService.updateEvent(\n        this.eventID,\n        form.value.eventname, \n        form.value.eventDate, \n        form.value.payment, \n        form.value.facilitators\n      );\n    }\n    form.resetForm();\n  }\n\n}\n","module.exports = \".login-card {\\n    max-width: 600px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 0 10px;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  .fiveEvents{\\n    margin-bottom: 20px;\\n}\\n  .mat-button-toggle-group{\\n      width: 100% !important;\\n  }\\n  /* .mat-button-toggle{\\n      width: 200px;\\n      height: 75px;\\n  } */\\n  .mat-button-toggle{\\n    width: 200px;\\n    height: 75px;\\n    /* border: 2px solid #e0e0e0; */\\n    margin: 5px; \\n}\\n  .mat-button-toggle:hover {\\n  background-color:#f5f5f5;\\n} \\n  \"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Event Registration</h1>\\n\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form (submit)=\\\"onAddAttendee(attendeeForm)\\\" #attendeeForm=\\\"ngForm\\\">\\n\\n        <div class=\\\"fiveEvents\\\">\\n          <h4>Choose Event to register for.</h4>\\n          <mat-button-toggle-group name=\\\"ourEvents\\\" [ngModel]=\\\"ourEvents?.upcoming\\\" #upcoming=\\\"ngModel\\\" required>\\n            <mat-button-toggle *ngFor=\\\"let upcoming of events\\\" [value]=\\\"upcoming\\\">{{upcoming.eventname}}</mat-button-toggle>\\n\\n          </mat-button-toggle-group>\\n\\n        </div>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"First Name\\\" [ngModel]=\\\"attendee?.firstname\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Last Name\\\" [ngModel]=\\\"attendee?.lastname\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Email\\\" [ngModel]=\\\"attendee?.email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" required>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Telephone\\\" [ngModel]=\\\"attendee?.telephone\\\" name=\\\"telephone\\\" #telephone=\\\"ngModel\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n\\n          </tr>\\n        </table>\\n\\n\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Gender\\\" name=\\\"gender\\\" [ngModel]=\\\"attendee?.sex\\\" #sex=\\\"ngModel\\\" required>\\n                  <mat-option *ngFor=\\\"let sex of gender\\\" [value]=\\\"sex\\\">\\n                    {{sex}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Occupation\\\" name=\\\"occupation\\\" [ngModel]=\\\"attendee?.occupation\\\" #occupation=\\\"ngModel\\\"\\n                  required>\\n                  <mat-option *ngFor=\\\"let occupation of occupations\\\" [value]=\\\"occupation\\\">\\n                    {{occupation}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n\\n\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Register</button>\\n\\n      </form>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Event } from '../../events.model';\nimport { Observable, observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nimport { FormControl } from '@angular/forms';\n\nimport { EventsService } from '../../events.service';\nimport { Attendee } from '../../events.model';\n\n@Component({\n  selector: 'app-event-register',\n  templateUrl: './event-register.component.html',\n  styleUrls: ['./event-register.component.css']\n})\nexport class EventRegisterComponent implements OnInit {\n\n  events: Event[]\n  sex = null;\n  gender = [\"Male\", \"Female\"];\n\n  isLoading = false;\n  attendee: Attendee;\n  private mode = \"create\";\n  private attendeeID: string;\n\n  occupation = null;\n  occupations = [\"Student\", \"Proffessional\", \"Other\"];\n\n\n  constructor(private eventsService: EventsService, public route: ActivatedRoute) { }\n\n\n  ngOnInit() {\n    this.eventsService.getEvents()\n      .subscribe(data => {\n        this.events = data\n        console.log(data);\n\n      }, err => {\n        console.log(err);\n\n      });\n    console.log(this.events);\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('attendeeID')) {\n        this.mode = 'edit';\n        this.attendeeID = paramMap.get('attendeeID');\n        this.isLoading = true;\n        this.eventsService.getAttendee(this.attendeeID).subscribe(attendeeData => {\n          this.isLoading = false;\n          this.attendee = {id: attendeeData.id, firstname: attendeeData.firstname, lastname: attendeeData.lastname, email: attendeeData.email, phone: attendeeData.phone, \n            gender: attendeeData.gender, occupation: attendeeData.occupation, eventAtt: attendeeData.eventAtt};\n        })\n\n      } else{\n        this.mode = 'create';\n        this.attendeeID = null;\n      }\n\n    });  \n\n  }\n\n\n  onAddAttendee(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === \"create\") {\n      this.eventsService.addAttendee(form.value.firstname, form.value.lastname, form.value.email, form.value.phone, form.value.gender, form.value.occupation, form.value.ourEvents);\n    } \n    // else {\n    //   this.eventsService.updateAttendee(\n    //     this.eventID,\n    //     form.value.eventname, \n    //     form.value.eventDate, \n    //     form.value.payment, \n    //     form.value.facilitators\n    //   );\n    // }\n    form.resetForm();\n  }\n\n  \n}\n","module.exports = \".login-card {\\n    max-width: 600px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 0 10px;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  \\n  \"","module.exports = \"<div class=\\\"card\\\">\\n    <mat-card class=\\\"login-card\\\">\\n      <mat-card-header>\\n        <mat-card-title class=\\\"title\\\">\\n          <h1>Pick an Event</h1>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n       \\n      </mat-card-content>\\n  \\n    </mat-card>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-events-board',\n  templateUrl: './events-board.component.html',\n  styleUrls: ['./events-board.component.css']\n})\nexport class EventsBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".login-card {\\n    max-width: 600px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 0 10px;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  [hidden] {\\n    display: none !important;\\n  }\\n  table {\\n    width: 100%;\\n  }\\n  .mat-column-right{\\n    text-align: right;\\n\\n}\\n  /* Structure */\\n  .example-container {\\n  position: relative;\\n}\\n  .example-table-container {\\n  position: relative;\\n  max-height: 400px;\\n  overflow: auto;\\n}\\n  .example-loading-shade {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 56px;\\n  right: 0;\\n  background: rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n  /* Column Widths */\\n  .mat-column-number,\\n.mat-column-state {\\n  max-width: 64px;\\n}\\n  .mat-column-created {\\n  max-width: 124px;\\n}\\n\\n  \\n  \"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"[ '/events' ]\\\">Back to Events</button>\\n    <br>\\n    <br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n      <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n    </div>\\n    <table mat-table [dataSource]=\\\"details\\\" class=\\\"mat-elevation-z8\\\">\\n\\n\\n      <ng-container matColumnDef=\\\"firstname\\\">\\n        <th mat-header-cell *matHeaderCellDef>First Name</th>\\n        <!-- <td mat-cell *matCellDef=\\\"let element\\\"> {{element.eventname}} </td> -->\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.firstname\\\">{{element.firstname}}</span> <span\\n            *ngIf=\\\"!element.firstname\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"lastname\\\">\\n        <th mat-header-cell *matHeaderCellDef>Last Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.lastname\\\">{{element.lastname}}</span> <span *ngIf=\\\"!element.lastname\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef>Email</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.email\\\">{{element.email}}</span> <span *ngIf=\\\"!element.email\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"gender\\\">\\n        <th mat-header-cell *matHeaderCellDef>Gender</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.gender\\\">{{element.gender}}</span> <span *ngIf=\\\"!element.gender\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"occupation\\\">\\n        <th mat-header-cell *matHeaderCellDef>Occupation</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.occupation\\\">{{element.occupation}}</span> <span\\n            *ngIf=\\\"!element.occupation\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"phone\\\">\\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"element.phone\\\">{{element.phone}}</span> <span *ngIf=\\\"!element.phone\\\">N/a</span></td>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item>\\n              <mat-icon>create</mat-icon>\\n              <span>Update</span>\\n            </button>\\n            <button mat-menu-item>\\n              <mat-icon>delete_sweep</mat-icon>\\n              <span>Delete</span>\\n            </button>\\n\\n          </mat-menu>\\n        </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\nimport { Event } from '../../../events.model';\nimport { Attendee } from '../../../events.model';\nimport { EventsService } from '../../../events.service';\n\n\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.css']\n})\nexport class EventDetailComponent implements OnInit {\n \n\n\n  details: Attendee[];\n  isLoading= false;\n\n  displayedColumns = ['firstname', 'lastname', 'email', 'gender', 'occupation', 'phone',];\n\n\n\n  constructor(private router: Router, private route: ActivatedRoute,\n    private eventsService: EventsService) { }\n\n  ngOnInit() {\n    \n    this.getDetails(this.route.snapshot.params['id']);\n\n  }\n\n  getDetails(id) {\n    this.isLoading = true;\n    this.eventsService.getAttendeesByEventId(id)\n      .subscribe(data => {\n        this.isLoading = false;\n        console.log(data);\n        this.details = data;\n      });\n  }\n\n\n}\n","module.exports = \".login-card {\\n    max-width: 600px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 0 10px;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  [hidden] {\\n    display: none !important;\\n  }\\n  table {\\n    width: 100%;\\n  }\\n  .mat-column-right{\\n    text-align: right;\\n    \\n\\n}\\n  .mat-form-field {\\n  font-size: 14px;\\n  float: right;\\n  width: 40%;\\n}\\n  /* .right{\\n  text-align: right;\\n} */\\n  /* Structure */\\n  .example-container {\\n  position: relative;\\n}\\n  .example-table-container {\\n  position: relative;\\n  max-height: 400px;\\n  overflow: auto;\\n}\\n  .example-loading-shade {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 56px;\\n  right: 0;\\n  background:#f5f5f5;\\n  z-index: 1;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n  /* Column Widths */\\n  .mat-column-number,\\n.mat-column-state {\\n  max-width: 64px;\\n}\\n  .mat-column-created {\\n  max-width: 124px;\\n}\\n  .mat-row:hover {\\n  background-color:#f5f5f5;\\n}\\n  .mat-spinner{\\n  color: #0087D9 !important;\\n}\\n  /* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n  \"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n\\n    \\n\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"[ '/create-event' ]\\\">Create An Event</button>\\n    <mat-form-field class=\\\"right\\\">\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search for keyword...\\\">\\n      </mat-form-field>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoading\\\">\\n        <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n      </div>\\n\\n    \\n\\n    <table id=\\\"myTable\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n      <ng-container matColumnDef=\\\"eventname\\\" id=\\\"eventName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Event Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"> {{element.eventname}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"eventDate\\\" id=\\\"eventDate\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Event Date</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"> <span *ngIf=\\\"element.eventDate\\\"> {{element.eventDate | date}} </span>\\n          <span *ngIf=\\\"!element.eventDate\\\"> N/a </span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"eventPaid\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Event Paid</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"><span *ngIf=\\\"element.eventPaid\\\">{{element.eventPaid}}</span> <span *ngIf=\\\"!element.eventPaid\\\">N/a</span></td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"facilitators\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Facilitators</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"navigate(element._id)\\\"> <span *ngIf=\\\"element.facilitators\\\">{{element.facilitators}}</span>\\n          <span *ngIf=\\\"!element.facilitators\\\">N/a</span></td>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n          <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item>\\n              <mat-icon>create</mat-icon>\\n              <span>Update</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"onDelete(element._id)\\\">\\n              <mat-icon>delete_sweep</mat-icon>\\n              <span>Delete</span>\\n            </button>\\n\\n          </mat-menu>\\n        </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\n\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <!-- <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/event-details/', row._id]\\\"></tr> -->\\n\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\"></mat-paginator>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, OnDestroy } from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\nimport { Event } from '../../events.model';\nimport { Attendee } from '../../events.model';\n\nimport { EventsService } from '../../events.service';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  events: Event[];\n  attendees: Attendee[]\n\n  isLoading = false;\n  \n  // displayedColumns = ['eventname', 'eventDate', 'eventPaid', 'firstname', 'lastname', 'email', 'phone', 'actions'];\n\n  displayedColumns = ['eventname', 'eventDate', 'eventPaid', 'facilitators', 'actions'];\n  dataSource: MatTableDataSource<Event>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n\n  constructor(private eventsService: EventsService, private router: Router, private changeDetectorRefs: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    \n    this.isLoading = true;\n    this.eventsService.getAllEvents()\n      .subscribe(data => {\n        this.isLoading = false;\n        // this.attendees = data\n        this.dataSource = new MatTableDataSource(data);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log(this.dataSource);\n        \n      }, err => {\n        console.log(err);\n        \n      });\n      console.log(this.dataSource); \n\n      this.refreshTable()\n  }\n\n  // Filter table\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  navigate(id){\n  this.router.navigate(['/event-details/', id]);\n  }\n\n  onDelete(id: string){\n    console.log('deleting');\n    this.eventsService.deleteEvent(id)\n    .subscribe(result => {\n      this.refreshTable();\n    });\n    \n  }\n\n  refreshTable(){\n    this.eventsService.getAllEvents()\n    .subscribe(data => {\n      this.events = data;\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      this.changeDetectorRefs.detectChanges();\n    })\n  }\n  \n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  template: `\n  <img src=\"/assets/images/loading.svg\">\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n    img {\n      display: block;\n      margin: 20px auto;\n      width: 50px;\n    }\n  `\n  ]\n})\nexport class LoadingComponent {\n  \n}","module.exports = \".login-card {\\n    max-width: 400px;\\n    height: 300px;\\n    margin: 5rem auto;\\n  }\\n  \\n  /* table {\\n    width: 100%;\\n  } */\\n  \\n  .full-width {\\n    width: 100%;\\n}\\n  \\n  .mat-card-title{\\n    text-align: center;\\n}\\n  \\n  .social-login{\\n    text-align: center;\\n}\\n  \\n  .material-icons {\\n    font-size: 40px;\\n    margin-right: 1em;\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <h1>Sign In</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form class=\\\"login-form\\\">\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions>\\n\\n      <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Sign In</button>\\n\\n    </mat-card-actions>\\n\\n    <a href=\\\"#\\\">\\n      <h5>Reset Password?</h5>\\n    </a>\\n  </mat-card>\\n</div>\\n\\n<div class=\\\"social-login\\\">\\n  <p>Or Login With</p>\\n  <mat-icon>\\n    <i class=\\\"material-icons\\\">\\n      duo\\n    </i>\\n  </mat-icon>\\n<mat-icon>\\n  <i class=\\\"material-icons\\\">\\n    speaker_phone\\n  </i></mat-icon>\\n  <mat-icon>\\n    <i class=\\\"material-icons\\\">\\n      chat\\n    </i>\\n  </mat-icon>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n// import { NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-my-dash',\n  templateUrl: './my-dash.component.html',\n  styleUrls: ['./my-dash.component.css']\n})\nexport class MyDashComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface MyTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: MyTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the MyTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class MyTableDataSource extends DataSource<MyTableItem> {\n  data: MyTableItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<MyTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: MyTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: MyTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n    [length]=\\\"dataSource.data.length\\\"\\n    [pageIndex]=\\\"0\\\"\\n    [pageSize]=\\\"50\\\"\\n    [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { MyTableDataSource } from './my-table-datasource';\n\n@Component({\n  selector: 'app-my-table',\n  templateUrl: './my-table.component.html',\n  styleUrls: ['./my-table.component.css']\n})\nexport class MyTableComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: MyTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new MyTableDataSource(this.paginator, this.sort);\n  }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar{\\n  z-index: 9999;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background: #0087D9 !important;\\n}\\n\\n.material-icons{\\n  padding-right: 20px;\\n}\\n\\n.flex-container { /* Safari */\\n  display: flex;\\n  justify-content: space-around;\\n}\\n\\n.front .mat-card{\\n  width: 180px;\\n  height: 60px;\\n  margin-top: 20px;\\n}\\n\\n.material-icons[_ngcontent-c1] {\\n  padding-right: 10px;\\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Outbox Admin</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"/home\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            home\\n          </i>\\n        </mat-icon>\\n        Home\\n      </a>\\n      <a mat-list-item routerLink=\\\"/attend\\\" routerLinkActive=\\\"active\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n              account_circle\\n          </i>\\n        </mat-icon>\\n        Attend Event\\n      </a>\\n      <a mat-list-item routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            event\\n          </i>\\n        </mat-icon>\\n        Events\\n      </a>\\n      <a mat-list-item routerLink=\\\"/residents\\\" routerLinkActive=\\\"active\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            people\\n          </i>\\n        </mat-icon>\\n        Residents\\n      </a>\\n      <a mat-list-item href=\\\"/page-under-construction\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            money\\n          </i>\\n        </mat-icon>\\n        Payments\\n      </a>\\n      <a mat-list-item href=\\\"/page-under-construction\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            local_grocery_store\\n          </i>\\n        </mat-icon>\\n        Housekeeping\\n      </a>\\n      \\n      <a mat-list-item href=\\\"/assets\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            add_circle_outline\\n          </i>\\n        </mat-icon>\\n        Assets\\n      </a>\\n      <a mat-list-item routerLink=\\\"/page-under-construction\\\">\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            account_circle\\n          </i>\\n        </mat-icon>\\n        My Account\\n      </a>\\n\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <!-- <span>outboxFront</span> -->\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n\\n    <div class=\\\"front flex-container\\\">\\n      <mat-card>\\n        <mat-icon>\\n          <i class=\\\"material-icons\\\">\\n            contact_mail\\n          </i>\\n        </mat-icon>\\n        Residency Inquiries\\n      </mat-card>\\n      <mat-card>\\n          <mat-icon>\\n              <i class=\\\"material-icons\\\">\\n                event\\n              </i>\\n            </mat-icon>\\n        Events Created</mat-card>\\n      <mat-card>Event Attendees</mat-card>\\n      <mat-card>New Clients</mat-card>\\n    </div>\\n    <router-outlet></router-outlet>\\n\\n  </mat-sidenav-content>\\n\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-our-nav',\n  templateUrl: './our-nav.component.html',\n  styleUrls: ['./our-nav.component.css']\n})\nexport class OurNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","module.exports = \"\"","module.exports = \"<h2>404 page not found\\n  \\n</h2>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h1{\\n    margin: 150px;\\n}\"","module.exports = \"\\n<h1 class=\\\"display-1\\\"> page-under-construction!! </h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-under0construction',\n  templateUrl: './page-under0construction.component.html',\n  styleUrls: ['./page-under0construction.component.css']\n})\nexport class PageUnder0constructionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  payments works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.css']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n  }\\n  .mat-column-right{\\n    text-align: right;\\n\\n}\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\">Add New Resident</button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <table mat-table [dataSource]=\\\"residents\\\" class=\\\"mat-elevation-z8\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"username\\\">\\n        <th mat-header-cell *matHeaderCellDef>Username</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"email\\\">\\n        <th mat-header-cell *matHeaderCellDef>Email</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"phone\\\">\\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"website\\\">\\n        <th mat-header-cell *matHeaderCellDef>Website</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.website}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"company.name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Company</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.company.name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\">Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\"> \\n        <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n          <mat-icon>more_vert</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item>\\n            <mat-icon>create</mat-icon>\\n            <span>Update</span>\\n          </button>\\n          <button mat-menu-item>\\n            <mat-icon>delete_sweep</mat-icon>\\n            <span>Delete</span>\\n          </button>\\n          \\n        </mat-menu>\\n      </td> \\n      </ng-container>\\n      \\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Resident } from '../residents';\nimport { ResidentsService } from '../residents.service';\n\n\n\n\n@Component({\n  selector: 'app-residents-list',\n  templateUrl: './residents-list.component.html',\n  styleUrls: ['./residents-list.component.css']\n})\nexport class ResidentsListComponent implements OnInit {\n\n  residents: Resident[];\n\n  displayedColumns = ['name', 'username', 'email', 'phone', 'website', 'company.name', 'actions'];\n\n  constructor(private residentsService: ResidentsService) { }\n\n  ngOnInit() {\n    this.residentsService.getResidents()\n        .subscribe(data => {\n          this.residents = data\n          console.log(data)\n        }, err=>{\n          console.log(err)\n        });\n        console.log(this.residents);\n        \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Resident } from './residents';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResidentsService {\n\n  private uri = 'https://jsonplaceholder.typicode.com/users';\n  constructor(private http: HttpClient) { }\n\n  getResidents(): Observable<Resident[]>{\n    return this.http.get<Resident[]>(this.uri);\n  }\n}\n\n","module.exports = \".login-card {\\n    max-width: 600px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 0 10px;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  [hidden] {\\n    display: none !important;\\n  }\\n  /* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n  \"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>User Registration</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n        </mat-form-field>\\n\\n\\n        <span>Use 8 or more characters with a mix of letters, numbers & symbols</span>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Telephone\\\" [(ngModel)]=\\\"telephone\\\" name=\\\"telephone\\\" required>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Alternate Telephone\\\" [(ngModel)]=\\\"alttelephone\\\" name=\\\"alttelephone\\\"\\n                  required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"ID Type\\\" class=\\\"full-width\\\" cellspacing=\\\"0\\\" required>\\n                  <mat-option *ngFor=\\\"let idtype of idType\\\" [value]=\\\"idtype.id\\\">{{idtype.name}}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </td>\\n\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                <input matInput placeholder=\\\"ID Number\\\" [(ngModel)]=\\\"idnumber\\\" name=\\\"idnumber\\\" required>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n\\n        </table>\\n\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-radio-button value=\\\"male\\\">Male</mat-radio-button>\\n            </td>\\n            <td>\\n              <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\n            </td>\\n          </tr>\\n\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <label *ngFor=\\\"let res of residency\\\">\\n              <input type=\\\"radio\\\" name=\\\"residency\\\" [(ngModel)]=\\\"residency\\\" \\n              [value]=\\\"res\\\">{{res.type}}</label>\\n\\n            <!-- <td>\\n              <mat-radio-button value=\\\"individual\\\">Individual</mat-radio-button>\\n            </td>\\n            <td>\\n              <mat-radio-button *ngIf=\\\"residency\\\" value=\\\"company\\\">Company</mat-radio-button>\\n            </td> -->\\n\\n          </tr>\\n        </table>\\n        <div>\\n            <label>If company, enter company name.</label>\\n            <mat-form-field class=\\\"full-width\\\">\\n                \\n                <input matInput placeholder=\\\"Company name\\\" [(ngModel)]=\\\"company\\\" name=\\\"number\\\" required>\\n\\n              </mat-form-field>\\n\\n        </div>\\n\\n      </form>\\n    </mat-card-content>\\n\\n\\n    <div class=\\\"social-login\\\">\\n      <p>Or Sign Up With</p>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          duo\\n        </i>\\n      </mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          speaker_phone\\n        </i></mat-icon>\\n      <mat-icon>\\n        <i class=\\\"material-icons\\\">\\n          chat\\n        </i>\\n      </mat-icon>\\n\\n\\n    </div>\\n\\n    <mat-card-actions align=\\\"end\\\">\\n\\n      <button mat-raised-button (click)=\\\"showForm()\\\" color=\\\"primary\\\">Next Step</button>\\n\\n    </mat-card-actions>\\n\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ResidentsService } from '../residents.service';\nimport { Resident } from '../residents';\n\n@Component({\n  selector: 'app-user-reg',\n  templateUrl: './user-reg.component.html',\n  styleUrls: ['./user-reg.component.css']\n})\nexport class UserRegComponent implements OnInit {\n\n  idType = [\n    {id: 1, name: \"National ID\"},\n    {id: 2, name: \"Passport\"},\n    {id: 3, name: \"Work ID\"}\n  ];\n\n  residency = [\n    {id: 1, type: \"Individual\"},\n    {id: 2, type: \"Company\"}\n  ];\n\n  // public residents = [];\n  residents: Resident[];\n\n  constructor(private residentsService: ResidentsService) { }\n\n  ngOnInit() {\n    this.residentsService.getResidents()\n        .subscribe(data => {\n          this.residents = data\n          console.log(data)\n        }, err=>{\n          console.log(err)\n        });\n        console.log(this.residents);\n        \n  }\n\n  \n}\n","module.exports = \".login-card {\\n    max-width: 500px;\\n    /* height: 400px; */\\n    margin: 3rem auto;\\n  }\\n  .login-card td{\\n      padding: 0 10px;\\n  }\\n  .mat-card-header{\\n      text-align: center;\\n  }\\n  .full-width {\\n    width: 100%;\\n  }\\n  [hidden] {\\n    display: none !important;\\n  }\\n  /* .material-icons {\\n      font-size: 40px;\\n      margin-right: 1em;\\n  }\\n   */\\n  \"","module.exports = \"<div class=\\\"card\\\">\\n  <mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"title\\\">\\n        <h1>Utilities Records</h1>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <form>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Item Name\\\" [(ngModel)]=\\\"itemname\\\" name=\\\"itemname\\\" required>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <mat-form-field class=\\\"full-width\\\">\\n                <input matInput placeholder=\\\"Unit Price\\\" [(ngModel)]=\\\"unitprice\\\" name=\\\"unitprice\\\" required>\\n              </mat-form-field>\\n            </td>\\n           \\n          </tr>\\n        </table>\\n        <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n          <tr>\\n              <td>\\n                  <mat-form-field class=\\\"full-width\\\">\\n                    <input matInput placeholder=\\\"Quantity\\\" [(ngModel)]=\\\"quantity\\\" name=\\\"quantity\\\" required>\\n                  </mat-form-field>\\n                </td>\\n            <td>\\n              <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Date of Purchase\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker1></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n\\n\\n          </tr>\\n        </table>\\n\\n\\n\\n\\n\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">Record</button>\\n\\n      </form>\\n    </mat-card-content>\\n\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-utilities',\n  templateUrl: './utilities.component.html',\n  styleUrls: ['./utilities.component.css']\n})\nexport class UtilitiesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}